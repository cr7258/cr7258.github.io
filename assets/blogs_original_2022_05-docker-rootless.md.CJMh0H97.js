import{_ as k}from"./chunks/ArticleMetadata.BFUCIUL_.js";import{_ as p,C as r,c as o,o as e,k as n,G as d,P as g,a as c,w as F,b as y,e as D}from"./chunks/framework.BhFhJsV2.js";import"./chunks/md5.DoUKmYou.js";const w=JSON.parse('{"title":"Docker Rootless 在非特权模式下运行 Docker","description":"","frontmatter":{"title":"Docker Rootless 在非特权模式下运行 Docker","author":"Se7en","date":"2022/03/03 20:00","categories":["原创"],"tags":["Docker"]},"headers":[],"relativePath":"blogs/original/2022/05-docker-rootless.md","filePath":"blogs/original/2022/05-docker-rootless.md","lastUpdated":1707227798000}'),A={name:"blogs/original/2022/05-docker-rootless.md"};function u(i,s,m,C,b,v){const h=k,l=r("ClientOnly");return e(),o("div",null,[s[0]||(s[0]=n("h1",{id:"docker-rootless-在非特权模式下运行-docker",tabindex:"-1"},[c("Docker Rootless 在非特权模式下运行 Docker "),n("a",{class:"header-anchor",href:"#docker-rootless-在非特权模式下运行-docker","aria-label":'Permalink to "Docker Rootless 在非特权模式下运行 Docker"'},"​")],-1)),d(l,null,{default:F(()=>{var a,t;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((t=i.$frontmatter)==null?void 0:t.showArticleMetadata)??!0)?(e(),y(h,{key:0,article:i.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),s[1]||(s[1]=g(`<h2 id="docker-rootless-基本概念" tabindex="-1">Docker Rootless 基本概念 <a class="header-anchor" href="#docker-rootless-基本概念" aria-label="Permalink to &quot;Docker Rootless 基本概念&quot;">​</a></h2><p>Rootless 模式允许以非 root 用户身份运行 <strong>Docker 守护进程（dockerd）和容器</strong>，以缓解 Docker 守护进程和容器运行时中潜在的漏洞。Rootless 模式是在 Docker v19.03 版本作为实验性功能引入的，在 Docker v20.10 版本 GA。</p><p>Rootless 模式目前对 Cgroups 资源控制，Apparmor 安全配置，Overlay 网络，存储驱动等还有一定的限制，暂时还不能完全取代 “Rootful” Docker。关于 Docker Rootless 的详细信息参见 Docker 官方文档 <a href="https://docs.docker.com/engine/security/rootless/#limiting-resources" target="_blank" rel="noreferrer"> Run the Docker daemon as a non-root user (Rootless mode)</a></p><p>Rootless 模式利用 user namespaces 将容器中的 root 用户和 Docker 守护进程（dockerd）用户映射到宿主机的非特权用户范围内。Docker 此前已经提供了 <code>--userns-remap</code> 标志支持了相关能力，提升了容器的安全隔离性。Rootless 模式在此之上，让 Docker 守护进程也运行在重映射的用户名空间中。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20211221101658.png" alt=""></p><h2 id="实践验证" tabindex="-1">实践验证 <a class="header-anchor" href="#实践验证" aria-label="Permalink to &quot;实践验证&quot;">​</a></h2><h3 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h3><p>本文使用 Centos 7.5 操作系统的虚拟机进行实验。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[root@demo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]# cat /etc/redhat-release</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CentOS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> release</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 7.5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.1804</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Core)</span></span></code></pre></div><h3 id="创建用户" tabindex="-1">创建用户 <a class="header-anchor" href="#创建用户" aria-label="Permalink to &quot;创建用户&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">useradd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rootless</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 123456</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rootless</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --stdin</span></span></code></pre></div><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p>Rootless 模式可以在没有 root 权限的情况下运行 Docker 守护进程和容器， 但是需要安装 <code>newuidmap</code>和<code>newgidmap</code> 工具，以便在用户命名空间下创建从属(subordinate)用户和组的映射(remapping)。通过以下命令安装 <code>newuidmap</code> 和 <code>newgidmap</code> 工具。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sudo sh -x</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">curl -o /etc/yum.repos.d/vbatts-shadow-utils-newxidmap-epel-7.repo https://copr.fedorainfracloud.org/coprs/vbatts/shadow-utils-newxidmap/repo/epel-7/vbatts-shadow-utils-newxidmap-epel-7.repo</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">yum install -y shadow-utils46-newxidmap</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">cat &lt;&lt;EOT &gt;/etc/sysctl.conf</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">user.max_user_namespaces = 28633</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EOT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sysctl --system</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span></code></pre></div><h3 id="uid-gid-映射配置" tabindex="-1">UID/GID 映射配置 <a class="header-anchor" href="#uid-gid-映射配置" aria-label="Permalink to &quot;UID/GID 映射配置&quot;">​</a></h3><p>从属用户和组的映射由两个配置文件来控制，分别是 <code>/etc/subuid</code> 和 <code>/etc/subgid</code>。使用以下命令为 rootless 用户设置 65536 个从属用户和组的映射。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;rootless:100000:65536&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/subuid</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;rootless:100000:65536&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/subgid</span></span></code></pre></div><p>对于 subuid，这一行记录的含义为： 用户 rootless，在当前的 user namespace 中具有 65536 个从属用户，用户 ID 为 100000-165535，在一个子 user namespace 中，这些从属用户被映射成 ID 为 0-65535 的用户。subgid 的含义和 subuid 相同。</p><p>比如说用户 rootless 在宿主机上只是一个具有普通权限的用户。我们可以把他的一个从属 ID (比如 100000 )分配给容器所属的 user namespace，并把 ID 100000 映射到该 user namespace 中的 uid 0。此时即便容器中的进程具有 root 权限，但也仅仅是在容器所在的 user namespace 中，一旦到了宿主机中，顶多也就有 rootless 用户的权限而已。</p><h3 id="安装-rootless-docker" tabindex="-1">安装 Rootless Docker <a class="header-anchor" href="#安装-rootless-docker" aria-label="Permalink to &quot;安装 Rootless Docker&quot;">​</a></h3><p>切换到 rootless 用户。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">su</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rootless</span></span></code></pre></div><p>执行以下命令安装 Rootless Docker。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://get.docker.com/rootless</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sh</span></span></code></pre></div><p>安装成功后显示如下内容。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20211226184130.png" alt=""></p><p>将以下内容添加到 ~/.bashrc 文件中，添加完以后使用 <code>source ~/.bashrc</code> 命令使环境变量生效。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> XDG_RUNTIME_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/home/rootless/.docker/run</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/home/rootless/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DOCKER_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">unix:///home/rootless/.docker/run/docker.sock</span></span></code></pre></div><h3 id="启动-docker-守护进程" tabindex="-1">启动 Docker 守护进程 <a class="header-anchor" href="#启动-docker-守护进程" aria-label="Permalink to &quot;启动 Docker 守护进程&quot;">​</a></h3><p>使用以下命令启动 Docker 守护进程。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dockerd-rootless.sh</span></span></code></pre></div><h3 id="运行容器" tabindex="-1">运行容器 <a class="header-anchor" href="#运行容器" aria-label="Permalink to &quot;运行容器&quot;">​</a></h3><p>使用以下命令启动一个 nginx 容器，并将 80 端口映射到宿主机的 8080 端口。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8080</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:80</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nginx</span></span></code></pre></div><p>查看容器。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[rootless@demo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]$ docker ps</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     COMMAND</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                  CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         PORTS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                                   NAMES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">f3b204c97a84</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     &quot;/docker-entrypoint.…&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   Up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minutes</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.0.0:8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">80/tcp,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :::8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">80/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   bold_stonebraker</span></span></code></pre></div><p>访问容器。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[rootless@demo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]$ curl http://localhost:8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果 Nginx 欢迎界面</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">DOCTYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> htm</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Welcome to nginx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">html</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> color-scheme:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> light</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dark</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">body</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> width:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 35</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">margin:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> auto</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">font-family:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Tahoma,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verdana,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Arial,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Welcome to nginx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">If you see this page, the nginx web server is successfully installed and</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">working.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Further</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> configuration</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> required.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">For online documentation and support please refer to</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">a href=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http://nginx.org/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">nginx.org</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">br/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Commercial</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> support</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> available</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> at</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">a href=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http://nginx.com/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">nginx.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p&gt;&lt;em</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Thank you </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> using nginx.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/em&gt;&lt;/p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://developer.aliyun.com/article/700923" target="_blank" rel="noreferrer">容器安全拾遗 - Rootless Container初探</a></li><li><a href="https://docs.docker.com/engine/security/rootless/" target="_blank" rel="noreferrer">Run the Docker daemon as a non-root user (Rootless mode)</a></li><li><a href="https://medium.com/@tonistiigi/experimenting-with-rootless-docker-416c9ad8c0d6" target="_blank" rel="noreferrer">Experimenting with Rootless Docker</a></li><li><a href="http://blog.itpub.net/31559359/viewspace-2645966/" target="_blank" rel="noreferrer">浅谈Docker的安全性支持（下篇）</a></li><li><a href="https://mp.weixin.qq.com/s/iMF211vWL722Wqxw9mRf7A" target="_blank" rel="noreferrer"> Docker v20.10 核心功能介绍和实践</a></li><li><a href="https://copr.fedorainfracloud.org/coprs/vbatts/shadow-utils-newxidmap/" target="_blank" rel="noreferrer">shadow-utils-newxidmap</a></li><li><a href="https://www.youtube.com/watch?v=uWURUtqLiqQ" target="_blank" rel="noreferrer">Hardening Docker Daemon with Rootless Mode</a></li><li><a href="https://www.cnblogs.com/sparkdev/p/9462838.html" target="_blank" rel="noreferrer">Linux Namespace : User</a></li><li><a href="https://www.cnblogs.com/sparkdev/p/9614164.html" target="_blank" rel="noreferrer">理解 docker 容器中的 uid 和 gid</a></li><li><a href="https://www.cnblogs.com/sparkdev/p/9614326.html" target="_blank" rel="noreferrer">隔离 docker 容器中的用户</a></li></ul><h2 id="欢迎关注" tabindex="-1">欢迎关注 <a class="header-anchor" href="#欢迎关注" aria-label="Permalink to &quot;欢迎关注&quot;">​</a></h2><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210306213609.png" alt=""></p>`,42))])}const x=p(A,[["render",u]]);export{w as __pageData,x as default};

import{_ as k}from"./chunks/ArticleMetadata.Cxlq8Gj7.js";import{_ as e,C as r,c as F,o as n,k as t,G as d,P as g,a as o,w as c,b as y,e as C}from"./chunks/framework.DIkCQIk8.js";import"./chunks/md5.BFEskVOY.js";const H=JSON.parse('{"title":"Habor 部署指南","description":"","frontmatter":{"title":"Habor 部署指南","author":"Se7en","date":"2022/09/03 20:00","categories":["原创"],"tags":["Harbor"]},"headers":[],"relativePath":"blogs/original/2022/10-harbor.md","filePath":"blogs/original/2022/10-harbor.md","lastUpdated":1707227798000}'),D={name:"blogs/original/2022/10-harbor.md"};function u(i,s,b,m,A,v){const l=k,p=r("ClientOnly");return n(),F("div",null,[s[0]||(s[0]=t("h1",{id:"habor-部署指南",tabindex:"-1"},[o("Habor 部署指南 "),t("a",{class:"header-anchor",href:"#habor-部署指南","aria-label":'Permalink to "Habor 部署指南"'},"​")],-1)),d(p,null,{default:c(()=>{var a,h;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((h=i.$frontmatter)==null?void 0:h.showArticleMetadata)??!0)?(n(),y(l,{key:0,article:i.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),s[1]||(s[1]=g(`<h2 id="harbor-介绍" tabindex="-1">Harbor 介绍 <a class="header-anchor" href="#harbor-介绍" aria-label="Permalink to &quot;Harbor 介绍&quot;">​</a></h2><p>Harbor 是由 VMware 开源的一款云原生制品仓库，Harbor 的核心功能是存储和管理 Artifact。Harbor 允许用户用命令行工具对容器镜像及其他 Artifact 进行推送和拉取，并提供了图形管理界面帮助用户查看和管理这些 Artifact。 在 Harbor 2.0 版本中，除容器镜像外，Harbor 对符合 OCI 规范的 Helm Chart、CNAB、OPA Bundle 等都提供了更多的支持。</p><h2 id="harbor-整体架构" tabindex="-1">Harbor 整体架构 <a class="header-anchor" href="#harbor-整体架构" aria-label="Permalink to &quot;Harbor 整体架构&quot;">​</a></h2><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210810222737.png" alt=""></p><p>如上图所示是 Harbor 2.0 的架构图，从上到下可分为代理层、功能层和数据层。</p><ul><li><strong>代理层</strong>：代理层实质上是一个 Nginx 反向代理，负责接收不同类型的客户端请求，包括浏览器、用户脚本、Docker 等，并根据请求类型和 URI 转发给不同的后端服务进行处理。</li><li><strong>功能层</strong>： <ul><li><strong>Portal</strong>：是一个基于 Argular 的前端应用，提供 Harbor 用户访问的界面。</li><li><strong>Core</strong>：是 Harbor 中的核心组件，封装了 Harbor 绝大部分的业务逻辑。</li><li><strong>JobService</strong>：异步任务组件，负责 Harbor 中很多比较耗时的功能，比如 Artifact 复制、扫描、垃圾回收等。</li><li><strong>Docker Distribution</strong>：Harbor 通过 Distribution 实现 Artifact 的读写和存取等功能。</li><li><strong>RegistryCtl</strong>：Docker Distribution 的控制组件。</li><li><strong>Notary（可选）</strong>：基于 TUF 提供镜像签名管理的功能。</li><li><strong>扫描工具（可选）</strong>：镜像的漏洞检测工具。</li><li><strong>ChartMuseum（可选）</strong>：提供 API 管理非 OCI 规范的 Helm Chart，随着兼容 OCI 规范的 Helm Chart 在社区上被更广泛地接受，Helm Chart 能以 Artifact 的形式在 Harbor 中存储和管理，不再依赖 ChartMuseum，因此 Harbor 可能会在后续版本中移除对 ChartMuseum 的支持。</li></ul></li><li><strong>数据层</strong>： <ul><li><strong>Redis</strong>：主要作为缓存服务存储一些生命周期较短的数据，同时对于 JobService 还提供了类似队列的功能。</li><li><strong>PostgreSQL</strong>：存储 Harbor 的应用数据，比如项目信息、用户与项目的关系、管理策略、配置信息、Artifact 的元数据等等。</li><li><strong>Artifact 存储</strong>：存储 Artifact 本身的内容，也就是每次推送镜像、Helm Chart 或其他 Artifact 时，数据最终存储的地方。默认情况下，Harbor 会把 Artifact 写入本地文件系统中。用户也可以修改配置，将 Artifact 存储在外部存储中，例如亚马逊的对象存储 S3、谷歌云存储 GCS、阿里云的对象存储 OSS 等等。</li></ul></li></ul><h2 id="docker-compose-部署-harbor" tabindex="-1">Docker Compose 部署 Harbor <a class="header-anchor" href="#docker-compose-部署-harbor" aria-label="Permalink to &quot;Docker Compose 部署 Harbor&quot;">​</a></h2><h3 id="前提要求" tabindex="-1">前提要求 <a class="header-anchor" href="#前提要求" aria-label="Permalink to &quot;前提要求&quot;">​</a></h3><p>硬件要求：</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806225940.png" alt=""></p><p>软件要求：</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806225949.png" alt=""></p><h3 id="下载安装包" tabindex="-1">下载安装包 <a class="header-anchor" href="#下载安装包" aria-label="Permalink to &quot;下载安装包&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/goharbor/harbor/releases/download/v2.3.1/harbor-offline-installer-v2.3.1.tgz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor-offline-installer-v2.3.1.tgz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor</span></span></code></pre></div><h3 id="修改配置文件" tabindex="-1">修改配置文件 <a class="header-anchor" href="#修改配置文件" aria-label="Permalink to &quot;修改配置文件&quot;">​</a></h3><p>拷贝模板文件为 harbor.yml。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor.yml.tmpl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor.yml</span></span></code></pre></div><p>编辑 harbor.yml 配置文件，hostname 是 harbor 对外暴露的访问地址，HTTP 服务对外暴露 8888 端口。这里暂时先不配置 HTTPS，将 HTTPS 相关内容注释。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210727114813.png" alt=""></p><h3 id="部署-harbor" tabindex="-1">部署 Harbor <a class="header-anchor" href="#部署-harbor" aria-label="Permalink to &quot;部署 Harbor&quot;">​</a></h3><p>修改完配置文件后，只需要执行 install.sh 脚本即可安装 Harbor。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./install.sh</span></span></code></pre></div><p>查看 Harbor 组件运行状况：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> docker-compose ps </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">      Name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                     Command</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                  State</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                        Ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-core</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         /harbor/entrypoint.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)                                           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-db</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           /docker-entrypoint.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 96</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)                                           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-jobservice</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   /harbor/entrypoint.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)                                           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-log</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          /bin/sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ...</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)   127.0.0.1:1514-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">10514/tcp               </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-portal</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> daemon</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;             </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)                                           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> daemon</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;             </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)   0.0.0.0:8888-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">8080/tcp,:::8888-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">8080/tcp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/redis.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)                                           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">registry</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            /home/harbor/entrypoint.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)                                           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">registryctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         /home/harbor/start.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            Up</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (healthy)</span></span></code></pre></div><h3 id="登录页面" tabindex="-1">登录页面 <a class="header-anchor" href="#登录页面" aria-label="Permalink to &quot;登录页面&quot;">​</a></h3><p>浏览器输入 <a href="http://11.8.36.21:8888" target="_blank" rel="noreferrer">http://11.8.36.21:8888</a> 访问 Harbor 页面，用户名和密码为 harbor.yml 配置文件中默认设置的 admin，Harbor12345。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210729124757.png" alt=""></p><h3 id="推送镜像" tabindex="-1">推送镜像 <a class="header-anchor" href="#推送镜像" aria-label="Permalink to &quot;推送镜像&quot;">​</a></h3><p>从公网拉取一个 nginx:1.19 版本的镜像：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> docker pull nginx:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1.19:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pulling</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> library/nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">69692152171a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">49f7d34d62c1:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">5f97dc5d71ab:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cfcd0711b93a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">be6172d7651b:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">de9813870342:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Digest:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Status:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Downloaded</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> newer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nginx:1.19</span></span></code></pre></div><p>编辑 /etc/docker/daemon.json，设置允许访问的 HTTP 仓库地址。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;insecure-registries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.36.21:8888&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>修改镜像 tag：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tag</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nginx:1.19</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 11.8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.36.21:8888/library/nginx:1.19</span></span></code></pre></div><p>登录 Harbor：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> docker login 11.8.36.21:8888</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Username:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> admin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Password:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Login</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Succeeded</span></span></code></pre></div><p>推送镜像到 Harbor：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> docker push 11.8.36.21:8888/library/nginx:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> refers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repository</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [11.8.36.21:8888/library/nginx]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">f0f30197ccf9:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">eeb14ff930d4:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">c9732df61184:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">4b8db2d7f35a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">431f409d4c5a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">02c055ef67f5:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1.19:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> digest:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sha256:eba373a0620f68ffdc3f217041ad25ef084475b8feb35b992574cd83698e9e3c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1570</span></span></code></pre></div><p>查看推送的镜像：</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210729125742.png" alt=""></p><h3 id="https-配置-可选" tabindex="-1">HTTPS 配置（可选） <a class="header-anchor" href="#https-配置-可选" aria-label="Permalink to &quot;HTTPS 配置（可选）&quot;">​</a></h3><p>在生产环境中建议配置 HTTPS，可以使用由受信任的第三方 CA 签名的证书，也可以使用自签名证书。如果想要启用 Content Trust with Notary 来正确签名所有图像，则必须使用 HTTPS。</p><h4 id="创建目录" tabindex="-1">创建目录 <a class="header-anchor" href="#创建目录" aria-label="Permalink to &quot;创建目录&quot;">​</a></h4><p>首先创建目录存放生成的证书。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/cert</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/cert/</span></span></code></pre></div><h4 id="生成-ca-证书" tabindex="-1">生成 CA 证书 <a class="header-anchor" href="#生成-ca-证书" aria-label="Permalink to &quot;生成 CA 证书&quot;">​</a></h4><p>本次实验中我们使用自签名证书。生产环境中应使用受信任的第三方 CA 签名的证书。</p><h5 id="生成-ca-证书私钥" tabindex="-1">生成 CA 证书私钥 <a class="header-anchor" href="#生成-ca-证书私钥" aria-label="Permalink to &quot;生成 CA 证书私钥&quot;">​</a></h5><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4096</span></span></code></pre></div><h5 id="生成-ca-证书-1" tabindex="-1">生成 CA 证书 <a class="header-anchor" href="#生成-ca-证书-1" aria-label="Permalink to &quot;生成 CA 证书&quot;">​</a></h5><p>-subj 表示证书的组织。CN 后面的值改成 harbor 的 IP 地址或者域名。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -nodes</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -sha512</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3650</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -subj</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=11.8.36.21&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.crt</span></span></code></pre></div><h4 id="生成-server-证书" tabindex="-1">生成 Server 证书 <a class="header-anchor" href="#生成-server-证书" aria-label="Permalink to &quot;生成 Server 证书&quot;">​</a></h4><p>生成 Harbor 使用的证书和私钥。</p><h5 id="生成-server-私钥" tabindex="-1">生成 Server 私钥 <a class="header-anchor" href="#生成-server-私钥" aria-label="Permalink to &quot;生成 Server 私钥&quot;">​</a></h5><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4096</span></span></code></pre></div><h5 id="生成-server-证书签名请求-csr" tabindex="-1">生成 Server 证书签名请求（CSR） <a class="header-anchor" href="#生成-server-证书签名请求-csr" aria-label="Permalink to &quot;生成 Server 证书签名请求（CSR）&quot;">​</a></h5><p>生成 Harbor 的证书签名请求，使用上面生成的 CA 证书来给 Server 签发证书。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -sha512</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -subj</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=11.8.36.21&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.csr</span></span></code></pre></div><h5 id="生成-x509-v3-扩展文件" tabindex="-1">生成 x509 v3 扩展文件 <a class="header-anchor" href="#生成-x509-v3-扩展文件" aria-label="Permalink to &quot;生成 x509 v3 扩展文件&quot;">​</a></h5><p>通过 docker 或者 ctr 等工具拉取 HTTPS 的镜像时，要求 HTTPS 的证书包含 SAN 扩展。</p><p>SAN（Subject Alternative Name） 是 SSL 标准 x509 中定义的一个扩展。使用了 SAN 字段的 SSL 证书，可以扩展此证书支持的域名，使得一个证书可以支持多个不同域名的解析。例如下图中 Google 的这张证书的主题备用名称（SAN）中列了一大串的域名，因此这张证书能够被多个域名所使用。对于 Google 这种域名数量较多的公司来说，使用这种类型的证书能够极大的简化网站证书的管理。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806205842.png" alt=""></p><p>使用以下命令生成 x509 v3 扩展文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3.ext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;&lt;-</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">authorityKeyIdentifier=keyid,issuer</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">basicConstraints=CA:FALSE</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">extendedKeyUsage = serverAuth</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">subjectAltName = IP:11.8.36.21</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span></code></pre></div><p>如果是域名访问通过下面方式生成 x509 v3 扩展文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3.ext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;&lt;-</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">authorityKeyIdentifier=keyid,issuer</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">basicConstraints=CA:FALSE</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">extendedKeyUsage = serverAuth</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">subjectAltName = @alt_names</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[alt_names]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">DNS.1=yourdomain.harbor.com</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">EO</span></span></code></pre></div><h5 id="使用-ca-证书签发-server-证书" tabindex="-1">使用 CA 证书签发 Server 证书 <a class="header-anchor" href="#使用-ca-证书签发-server-证书" aria-label="Permalink to &quot;使用 CA 证书签发 Server 证书&quot;">​</a></h5><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -sha512</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3650</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -extfile</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3.ext</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -CA</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -CAkey</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -CAcreateserial</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.csr</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.crt</span></span></code></pre></div><p>查看当前目录生成的文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-portainer:/root/cert</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #ll </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 32</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2025</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:44</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3243</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:40</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.key</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:03</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.srl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2045</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:03</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.crt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1704</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:47</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.csr</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3247</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:45</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  202</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3.ext</span></span></code></pre></div><h4 id="为-harbor-和-docker-配置证书" tabindex="-1">为 Harbor 和 Docker 配置证书 <a class="header-anchor" href="#为-harbor-和-docker-配置证书" aria-label="Permalink to &quot;为 Harbor 和 Docker 配置证书&quot;">​</a></h4><h5 id="将-server-证书和密钥复制到-harbor-主机上的-data-cert-目录中" tabindex="-1">将 server 证书和密钥复制到 Harbor 主机上的 /data/cert 目录中 <a class="header-anchor" href="#将-server-证书和密钥复制到-harbor-主机上的-data-cert-目录中" aria-label="Permalink to &quot;将 server 证书和密钥复制到 Harbor 主机上的 /data/cert 目录中&quot;">​</a></h5><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /data/cert</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.crt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /data/cert/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /data/cert/</span></span></code></pre></div><h5 id="转换-server-crt-为-server-cert" tabindex="-1">转换 server.crt 为 server.cert <a class="header-anchor" href="#转换-server-crt-为-server-cert" aria-label="Permalink to &quot;转换 server.crt 为 server.cert&quot;">​</a></h5><p>Docker 守护程序会认为 .crt 文件是 CA 证书，因此需要将 server 证书转换为 server.cert 文件。其实改下后缀就可以了，证书里面的内容是一样的。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -inform</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> PEM</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.cert</span></span></code></pre></div><h5 id="将-server-证书-密钥和-ca-证书复制到-harbor-主机上的-docker-证书目录中" tabindex="-1">将 server 证书，密钥和 CA 证书复制到 Harbor 主机上的 Docker 证书目录中 <a class="header-anchor" href="#将-server-证书-密钥和-ca-证书复制到-harbor-主机上的-docker-证书目录中" aria-label="Permalink to &quot;将 server 证书，密钥和 CA 证书复制到 Harbor 主机上的 Docker 证书目录中&quot;">​</a></h5><p>需要提前创建好 Docker 证书目录，如果使用 443 端口监听 HTTPS 请求，则目录为 IP/域名 即可，如果使用非 443 端口，则目录为 IP/域名:端口。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/docker/certs.d/11.8.36.21:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.cert</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/docker/certs.d/11.8.36.21:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/docker/certs.d/11.8.36.21:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.crt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/docker/certs.d/11.8.36.21:8443</span></span></code></pre></div><p>查看 Docker 证书目录文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-portainer:/root/cert</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #ll /etc/docker/certs.d/11.8.36.21:8443/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 12</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2025</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:15</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.crt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2045</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:15</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.cert</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3247</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:15</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.key</span></span></code></pre></div><h5 id="重启-docker-engine" tabindex="-1">重启 Docker Engine <a class="header-anchor" href="#重启-docker-engine" aria-label="Permalink to &quot;重启 Docker Engine&quot;">​</a></h5><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span></span></code></pre></div><h4 id="重新部署-harbor" tabindex="-1">重新部署 Harbor <a class="header-anchor" href="#重新部署-harbor" aria-label="Permalink to &quot;重新部署 Harbor&quot;">​</a></h4><p>修改 harbor.yml 配置文件，添加 HTTPS 相关配置，指定 HTTPS 的端口号和证书路径:</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806212011.png" alt=""></p><h4 id="使用-prepare-脚本生成-https-配置" tabindex="-1">使用 prepare 脚本生成 HTTPS 配置 <a class="header-anchor" href="#使用-prepare-脚本生成-https-配置" aria-label="Permalink to &quot;使用 prepare 脚本生成 HTTPS 配置&quot;">​</a></h4><p>使用 prepare 脚本为反向代理 Nginx 容器生成 HTTPS 配置。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./prepare</span></span></code></pre></div><h4 id="删除原有-harbor-容器" tabindex="-1">删除原有 Harbor 容器 <a class="header-anchor" href="#删除原有-harbor-容器" aria-label="Permalink to &quot;删除原有 Harbor 容器&quot;">​</a></h4><p>Harbor 原有的数据文件默认是挂载在宿主机的 /data 目录下，因此删除 Harbor 容器并不会丢失数据。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> down</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -v</span></span></code></pre></div><h4 id="重新启动-harbor" tabindex="-1">重新启动 Harbor <a class="header-anchor" href="#重新启动-harbor" aria-label="Permalink to &quot;重新启动 Harbor&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span></span></code></pre></div><h4 id="登录-https-页面" tabindex="-1">登录 HTTPS 页面 <a class="header-anchor" href="#登录-https-页面" aria-label="Permalink to &quot;登录 HTTPS 页面&quot;">​</a></h4><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806212959.png" alt=""></p><h4 id="docker-拉取和推送镜像" tabindex="-1">Docker 拉取和推送镜像 <a class="header-anchor" href="#docker-拉取和推送镜像" aria-label="Permalink to &quot;Docker 拉取和推送镜像&quot;">​</a></h4><p>Docker 想要拉取或者推送 HTTPS 镜像仓库的镜像，需要在 Docker 证书目录中配置证书，这里的 Docker 客户端是另一台机器，首先在这台机器上创建目录。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/docker/certs.d/11.8.36.21:8443</span></span></code></pre></div><p>然后从 Harbor 主机拷贝证书文件到 Docker 客户端上，需要 server 的证书和密钥以及 CA 证书。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/cert/server.key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  root@11.8.36.95:/etc/docker/certs.d/11.8.36.21:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/cert/server.cert</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  root@11.8.36.95:/etc/docker/certs.d/11.8.36.21:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/cert/ca.crt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  root@11.8.36.95:/etc/docker/certs.d/11.8.36.21:8443</span></span></code></pre></div><p>拉取镜像：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-nginx-cisp:/root</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #docker pull 11.8.36.21:8443/library/nginx:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Trying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repository</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 11.8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.36.21:8443/library/nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1.19:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pulling</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 11.8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.36.21:8443/library/nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Digest:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sha256:eba373a0620f68ffdc3f217041ad25ef084475b8feb35b992574cd83698e9e3c</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Status:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Downloaded</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> newer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 11.8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.36.21:8443/library/nginx:1.19</span></span></code></pre></div><p>推送镜像：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#登录 Harbor 镜像仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-nginx-cisp:/root</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #docker login https://11.8.36.21:8443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Username:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> admin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Password:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Login</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Succeeded</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#给镜像打 tag，换个名字</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-nginx-cisp:/root</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #docker tag 11.8.36.21:8443/library/nginx:1.19 11.8.36.21:8443/library/nginx-2:1.19</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#推送镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-nginx-cisp:/root</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #docker push 11.8.36.21:8443/library/nginx-2:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> refers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repository</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [11.8.36.21:8443/library/nginx-2]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">f0f30197ccf9:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">eeb14ff930d4:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">c9732df61184:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">4b8db2d7f35a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">431f409d4c5a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">02c055ef67f5:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Pushed</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1.19:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> digest:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sha256:eba373a0620f68ffdc3f217041ad25ef084475b8feb35b992574cd83698e9e3c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1570</span></span></code></pre></div><h4 id="containerd-配置镜像仓库" tabindex="-1">Containerd 配置镜像仓库 <a class="header-anchor" href="#containerd-配置镜像仓库" aria-label="Permalink to &quot;Containerd 配置镜像仓库&quot;">​</a></h4><p>Kubernetes 最早将在 1.23 版本弃用 Docker 作为容器运行时，并在博客中强调可以使用如 Containerd 等 CRI 运行时来代替 Docker。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806220323.png" alt=""></p><p>kubelet 直接调用 Containerd 意味着调用链更短，组件更少，更稳定，占用节点资源更少。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210806220341.png" alt=""></p><p>对于 Containerd 来说，不能像 Docker 一样使用 docker login 登录到镜像仓库，需要修改其配置文件来进行认证。</p><h5 id="方式一-跳过证书验证" tabindex="-1">方式一 跳过证书验证 <a class="header-anchor" href="#方式一-跳过证书验证" aria-label="Permalink to &quot;方式一 跳过证书验证&quot;">​</a></h5><p>编辑 /etc/containerd/config.toml 文件，添加以下配置。注意这里有个天坑：registry.mirrors 后面跟的才是 Harbor 主机的地址，一定要写对，反倒是 endpoint 中的内容可以随便写。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.mirrors]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.mirrors.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;docker.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            endpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://registry-1.docker.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.mirrors.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#一定要写对</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             endpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#其实可以随便写</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.configs]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.configs.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.tls]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             insecure_skip_verify</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #跳过证书验证</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.configs.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.auth]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             username</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;admin&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             password</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;Harbor12345&quot;</span></span></code></pre></div><h5 id="方式二-配置证书" tabindex="-1">方式二 配置证书 <a class="header-anchor" href="#方式二-配置证书" aria-label="Permalink to &quot;方式二 配置证书&quot;">​</a></h5><p>如果想要安全些，可以把 CA 证书拷贝到 containerd 的机器上，然后修改 /etc/containerd/config.toml，指定 CA 证书。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.mirrors]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.mirrors.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;docker.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            endpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://registry-1.docker.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.mirrors.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             endpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.configs]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.configs.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.tls]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             ca_file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/etc/ssl/certs/ca.crt&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #指定CA证书</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">         [plugins.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.containerd.grpc.v1.cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.registry.configs.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;11.8.75.154:11111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.auth]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             username</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;admin&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">             password</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;Harbor12345&quot;</span></span></code></pre></div><p>配置文件后重启 Containerd：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> containerd</span></span></code></pre></div><p>当 Kubernetes 需要拉取 Harbor 的镜像时，会自动根据 Containerd 的配置认证 Harbor 镜像仓库。</p><h2 id="kubernetes-部署-harbor" tabindex="-1">Kubernetes 部署 Harbor <a class="header-anchor" href="#kubernetes-部署-harbor" aria-label="Permalink to &quot;Kubernetes 部署 Harbor&quot;">​</a></h2><p>上面介绍的通过 Docker Compose 方式部署 Harbor 的方式通常仅在单机测试环境下使用，在生产环境中用户可能需要在 Kubernetes 集群中部署 Harbor。Harbor 提供了 Helm Chart 来帮助用户在 Kubernetes 上快速部署 Harbor。</p><p>添加 Harbor Helm Chart 仓库，并将 Helm Chart 下载到本地。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://helm.goharbor.io</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  harbor/harbor</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --untar</span></span></code></pre></div><p>编辑 harbar/values.yaml 文件：</p><ul><li>修改服务类型为 nodePort，这样 Kubernetes 集群外部的机器就可以通过 Node:IP 来访问 Harbor。</li><li>设置 HTTPS 证书的域名。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807222632.png" alt=""></p><ul><li>修改 externalURL，表示外部客户端访问 Harbor 的地址。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809205319.png" alt=""></p><p>执行下面命令在 cloudnative-lab 命名空间部署 Harbor。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cloudnative-lab</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --create-namespace</span></span></code></pre></div><p>查看部署的 Harbor 容器。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">❯</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pod</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cloudnative-lab</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-chartmuseum-685fccc58d-n6bs7</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">              1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-core-58db6ff9b9-zfk2z</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                     1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-database-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-jobservice-6867cc6bfb-cpvrq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">               1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-nginx-7949594686-f4cxz</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                    1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-notary-server-6845f46559-975g4</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   2</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-notary-signer-6bcf747cc7-9k62c</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   2</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-portal-c55c48545-twnfn</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                    1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-redis-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-registry-7df77757c4-k4kqz</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                 2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-trivy-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m46s</span></span></code></pre></div><p>查看 Harbor 相关的 service，注意名为 harbor 的 service，这是 Harbor 反向代理 Nginx 的容器对应的 service，通过 NodePort 的方式暴露到集群外，下面在 Kubernetes 集群外我们都是通过这个 service 来访问 Harbor。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">❯</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> svc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cloudnative-lab</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> harbor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                          NodePort</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.218.77</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        80</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:30002/TCP,443:30003/TCP,4443:30004/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-chartmuseum</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.89.193</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        80</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                      6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m8s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-core</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                     ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.166.42</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        80</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                      6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m8s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-database</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                 ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.68.131</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        5432</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                    6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m8s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-jobservice</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.96.160</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        80</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                      6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m8s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-notary-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.15.36</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">     &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        4443</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                    6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-notary-signer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.150.117</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        7899</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                    6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-portal</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                   ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.183.66</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        80</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                      6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                    ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.254.28</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        6379</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                    6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-registry</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                 ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.167.212</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        5000</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP,8080/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                           6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">harbor-trivy</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                    ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   24.3</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.110.121</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        8080</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                    6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m7s</span></span></code></pre></div><p>客户端添加 hosts 记录，编辑 /etc/hosts 添加，11.8.38.43 是其中一个 Kubernetes 节点的 IP 地址，myharbor.com 是我们前面部署 Harbor 时指定的域名。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">11.8.38.43</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   myharbor.com</span></span></code></pre></div><p>通过 Kubernetes 部署 Harbor 默认会生成自签名证书并启动 HTTPS 加密。浏览器输入 <a href="https://myharbor.com:30003" target="_blank" rel="noreferrer">https://myharbor.com:30003</a> 访问 Harbor 用户界面。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807195758.png" alt=""></p><h2 id="使用-harbor-作为-helm-chart-制品仓库" tabindex="-1">使用 Harbor 作为 Helm Chart 制品仓库 <a class="header-anchor" href="#使用-harbor-作为-helm-chart-制品仓库" aria-label="Permalink to &quot;使用 Harbor 作为 Helm Chart 制品仓库&quot;">​</a></h2><p>Harbor 不仅可以作为镜像仓库，还可以管理符合 OCI 规范的 Helm Chart、CNAB、OPA Bundle 等 Artifact。</p><h3 id="webui-上传-helm-charts" tabindex="-1">WebUI 上传 Helm Charts <a class="header-anchor" href="#webui-上传-helm-charts" aria-label="Permalink to &quot;WebUI 上传 Helm Charts&quot;">​</a></h3><p>首先新建一个项目名为 helm-repo。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807200633.png" alt=""></p><p>从 <a href="https://artifacthub.io" target="_blank" rel="noreferrer">Helm Chart 仓库</a> 找一个别人分享的 Helm Chart，这里我选择一个 Kafka Helm Chart。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807212016.png" alt=""></p><p>使用以下命令拉取 Kafka Helm Chart。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bitnami</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://charts.bitnami.com/bitnami</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bitnami/kafka</span></span></code></pre></div><p>在 Harbor 界面选择 Kafka Helm Chart 的压缩文件，点击上传。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807201459.png" alt=""></p><p>Helm Charts 上传成功后，就可以看到相关信息，包括: Chart 版本号、状态、作者、模板引擎、创建时间等信息。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807201952.png" alt=""></p><p>点击 Chart 版本可以查看该 Chart 的详细信息主要包括 Summary、Dependencies、Values 等相关信息。</p><ul><li>Summary：Helm Chart 相关介绍以及安装命令等。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807202049.png" alt=""></p><ul><li>Dependencies：Helm Chart 依赖的其他 repository 信息。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807202107.png" alt=""></p><ul><li>Values：Helm Chart 的 values.yaml 文件内容。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807202118.png" alt=""></p><h3 id="添加-harbor-helm-仓库" tabindex="-1">添加 harbor helm 仓库 <a class="header-anchor" href="#添加-harbor-helm-仓库" aria-label="Permalink to &quot;添加 harbor helm 仓库&quot;">​</a></h3><p>因为我们的 HTTPS 证书是自签名证书，在添加仓库的时候需要带上 ca.crt，如果是受信任的第三方 CA 签名的证书则无需此步骤。点击注册证书下载 ca.crt 文件。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807214514.png" alt=""></p><p>在 helm repo add 命令时指定 ca.crt 文件。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --ca-file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--username=admin </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">--password=Harbor12345</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">myrepo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://myharbor.com:30003/chartrepo/helm-repo</span></span></code></pre></div><p>查看刚刚添加的名为 myrepo 的仓库。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807205042.png" alt=""></p><h3 id="部署-helm-charts" tabindex="-1">部署 Helm Charts <a class="header-anchor" href="#部署-helm-charts" aria-label="Permalink to &quot;部署 Helm Charts&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kafka</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --ca-file=ca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--username=admin </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">--password=Harbor12345</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myrepo/kafka</span></span></code></pre></div><p>查看部署的 Kafka Helm Chart。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">❯</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pod</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cloudnative-lab</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kafka</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                          1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          36</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-zookeeper-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          36</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span></code></pre></div><h3 id="cli-上传-helm-charts" tabindex="-1">CLI 上传 Helm Charts <a class="header-anchor" href="#cli-上传-helm-charts" aria-label="Permalink to &quot;CLI 上传 Helm Charts&quot;">​</a></h3><p>如果我们想通过 CLI 上传 Helm Charts 到 Harbor，需要安装 helm plugin。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/chartmuseum/helm-push</span></span></code></pre></div><p>上传我们提前在本地准备好的 Redis Helm Charts 到 Harbor 仓库。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --ca-file=ca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --username=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --password=Harbor12345</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  redis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  myrepo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Pushing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> redis-12.7.7.tgz</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myrepo...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Done.</span></span></code></pre></div><p>查看刚刚上传好的 Redis Helm Chart。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807210707.png" alt=""></p><h2 id="远程复制" tabindex="-1">远程复制 <a class="header-anchor" href="#远程复制" aria-label="Permalink to &quot;远程复制&quot;">​</a></h2><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210810233041.png" alt=""></p><p>在大规模集群环境下，如果所有 Docker 主机都从一个镜像仓库中拉取镜像，那么此镜像仓库很可能会成为镜像分发的瓶颈，影响镜像分发的速度。可以通过搭建多个镜像仓库并配合使用远程复制功能，解决这一问题。如下图所示，图中的镜像仓库分为两级：主仓库和子仓库。在主仓库和子仓库之间配置了远程复制策略。当一个应用镜像被推送到主仓库后，根据所配置的复制策略，镜像可以立即被分发到其他子镜像仓库。集群中的 Docker 主机就可以就近在其中任意一个子仓库中拉取所需的镜像，减轻主仓库的压力。</p><p>首先新建一个目标仓库，这里的目标仓库选择前面用 Docker Compose 部署的 Harbor。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807213832.png" alt=""></p><p>查看创建好的目标仓库。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807213848.png" alt=""></p><p>创建复制规则，复制策略支持推送和拉取两种方式。推送是指将当前 Harbor 实例的 Artifact 复制到远程 Artifact 仓库服务下；拉取是指将其他 Artifact 仓库服务中的 Artifact 复制到当前 Harbor 实例中。</p><p>Harbor 针对 Artifact 的不同属性支持 4 种过滤器，分别是名称过滤器、Tag 过滤器、标签过滤器、资源过滤器。</p><p>这里我们选择远程复制 library 项目下的所有镜像到 Docker Compose 部署的 Harbor 中。触发模式为事件驱动，一旦有镜像推送到 Harbor 中，就会立即复制到远程仓库中。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807214004.png" alt=""></p><p>查看复制策略。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210807214220.png" alt=""></p><p>我们找一台 Docker 客户端上传镜像到 myharbor.com 这个 Harbor，需要在 /etc/docker/certs.d 目录下创建 Harbor地址:端口号的目录，并将 Harbor 的 CA 证书放在里面。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#创建目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/docker/certs.d/myharbor.com:30003</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#Harbor CA 证书，和前面在使用 Harbor 作为 Helm Chart 制品仓库章节中下载的一样</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ls /etc/docker/certs.d/myharbor.com:30003</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ca.crt</span></span></code></pre></div><p>给本地的 Docker 镜像打上 Harbor 仓库的 tag。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tag</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 11.8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.36.21:8888/library/nginx:1.19</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/library/nginx-new:1.19</span></span></code></pre></div><p>推送镜像到 Harbor。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/library/nginx-new:1.19</span></span></code></pre></div><p>在 myharbor.com 的 Harbor 仓库查看刚刚推送上来的镜像。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809203701.png" alt=""></p><p>查看复制进度，可以看到已经完成了复制。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809203725.png" alt=""></p><p>到远程仓库查看，可以看到镜像已经成功复制过来了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809203808.png" alt=""></p><h2 id="镜像扫描" tabindex="-1">镜像扫描 <a class="header-anchor" href="#镜像扫描" aria-label="Permalink to &quot;镜像扫描&quot;">​</a></h2><p>代码和软件通常具有缺陷，作为应用和其所依赖的软件包和操作系统的打包形式，容器镜像自然也不例外。恶意的攻击者会利用其中的一些缺陷非法入侵系统，破坏系统的运行或者窃取私密信息，这些缺陷就是我们熟知的漏洞。缺陷一旦被认定为漏洞，就可以通过 MITRE 公司注册为 CVE（Common Vulnerabilities and Exposures，公开披露的计算机安全漏洞列表）。</p><p>Harbor 支持 Trivy 和 Clair 作为镜像扫描器，通过 Helm 方式部署的 Harbor 默认安装了 Trivy。</p><p>可以在项目中选择指定的 Artifact 进行扫描，也可以在审查服务中进行全局漏洞扫描。</p><p>全局漏洞扫描： <img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210810234736.png" alt=""></p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809214937.png" alt=""></p><p>选择指定 Artifact 扫描： <img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210810235556.png" alt=""></p><p>扫描完成后可以看到镜像危急、严重、中等、较低、可忽略、未知不同等级的漏洞数量。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809215103.png" alt=""></p><p>点击镜像可以查看漏洞的详细信息。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809215019.png" alt=""></p><p>点击 CVE 缺项码可以跳转到 Aqua Security 网站上查看该 CVE 缺陷码的详细说明。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809215044.png" alt=""></p><h2 id="镜像签名" tabindex="-1">镜像签名 <a class="header-anchor" href="#镜像签名" aria-label="Permalink to &quot;镜像签名&quot;">​</a></h2><p>TUF 是一种安全软件分发规范，具有由非对称密钥表示的具有层次结构的角色，并且运用这些非对称密钥签名的元数据来建立信任。开源项目 Notary 基于 TUF 实现，提供了完整的工具链来更好地支持内容信任流程。</p><p>通过 Helm 方式部署 Harbor 默认安装了 Notary。在 Harbor 内核服务中实现了签名管理器，可通过 Notary 服务器实现 Artifact 数字签名的管理。内容信任确保客户端或者容器运行时拉取的 Artifact 内容真实可靠，从而更好地提高系统的安全性。</p><p>新建一个项目 sign 存放该实验的镜像。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809211038.png" alt=""></p><p>启用内容信任策略。当 Harbor 启用内容信任策略后，如果 Harbor 收到客户端拉取 Artifact 的请求，Core 组件中的内容信任策略中间件处理器就会根据所请求的 Artifact 的签名信息，决定该请求是否被允许。如果签名信息不存在，则拉取请求会被拒绝；如果签名信息存在且合法，则拉取请求会被允许通过。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809211111.png" alt=""></p><p>在 Docker 客户端的命令行中设置以下环境变量启用内容信任机制。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DOCKER_CONTENT_TRUST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DOCKER_CONTENT_TRUST_SERVER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://myharbor.com:30004</span></span></code></pre></div><p>我在安装 Harbor 时启用了 TLS 并且使用了自签证书，需要确保复制 CA 证书到 Docker 客户端以下两个目录中。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#30004 是 Notary 服务对外暴露的端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/.docker/tls/myharbor.com:30004</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#30003 是 Portal 服务对外暴露的端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/etc/docker/certs.d/myharbor.com:30003</span></span></code></pre></div><p>在本地给镜像打 tag 并推送镜像到 Harbor。在上传成功后会继续内容信任的签名步骤。如果根密钥还未创建，则系统会要求输入强密码以创建根密钥，之后在启用内容信任的条件下推送镜像都需要该密码。同时，系统还会要求输入强密码以创建正在推送的镜像仓库的目标密钥。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> docker tag 11.8.36.21:8443/library/nginx:1.19 myharbor.com:30003/sign/nginx-sign:1.19</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> docker push myharbor.com:30003/sign/nginx-sign:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> refers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repository</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [myharbor.com:30003/sign/nginx-sign]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">f0f30197ccf9:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Layer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">eeb14ff930d4:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Layer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">c9732df61184:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Layer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">4b8db2d7f35a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Layer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">431f409d4c5a:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Layer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">02c055ef67f5:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Layer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1.19:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> digest:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sha256:eba373a0620f68ffdc3f217041ad25ef084475b8feb35b992574cd83698e9e3c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1570</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Signing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pushing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> trust</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metadata</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#创建根密钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">You</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> about</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> signing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> This</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">will</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> used</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protect</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> most</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sensitive</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> signing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> system.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Please</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">choose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> long,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complex</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> careful</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> password</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> itself</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> secure</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> backed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> It</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> highly</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> recommended</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> that</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">password</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> manager</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generate</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> it</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> safe.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> There</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> will</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">way</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> recover</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> You</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> can</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> find</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> directory.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">eeb53:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Repeat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">eeb53:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#创建正在推送的镜像仓库的目标密钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repository</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 45</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f6c55</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (myharbor.com:30003/sign/nginx-sign): </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Repeat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> passphrase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> repository</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 45</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f6c55</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (myharbor.com:30003/sign/nginx-sign): </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Finished</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> initializing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;myharbor.com:30003/sign/nginx-sign&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Successfully</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> signed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;myharbor.com:30003/sign/nginx-sign&quot;:1.19</span></span></code></pre></div><p>生成的密钥都会以 <code>~/.docker/trust/private/&lt;digest&gt;.key</code> 路径存放，对应的 TUF 元数据文件被存放在 <code>~/.docker/trust/tuf/&lt;harbor 主机地址:端口号&gt;/&lt;镜像仓库路径&gt;/metadata</code> 目录下。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#tree ~/.docker/trust/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/root/.docker/trust/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> private</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root_keys</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   └──</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">eeb53b454983f95c12718d1dcfdbc1e600253c20eab1ca8ee5743dac9f0fa0.key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tuf_keys</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sign</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nginx-sign</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                   └──</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 45</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f6c55ea9846cf0ba552915e0599b4e7f45c742f6418c5f1116b61f2650ca48.key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tuf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sign</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nginx-sign</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> changelist</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metadata</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root.json</span></span></code></pre></div><p>签名成功后，登录 Harbor 管理界面，可以在镜像的 tag 列表中查看该镜像处于已签名的状态。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809212525.png" alt=""></p><p>此时我们推送一个没有签名的镜像到 Harbor 中，在上传完镜像后我们不做签名的操作。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tag</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 11.8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.36.21:8443/library/nginx:1.19</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/sign/nginx-unsign:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/sign/nginx-unsign:1.19</span></span></code></pre></div><p>查看该未签名的镜像。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809213035.png" alt=""></p><p>未签名的镜像是无法拉取的，如果尝试拉取会有以下报错。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#docker pull myharbor.com:30003/sign/nginx-unsign:1.19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> trust</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> data</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> does</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exist</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/sign/nginx-unsign:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30004</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> does</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> trust</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> data</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/sign/nginx-unsign</span></span></code></pre></div><p>签名了的镜像无法直接通过 Harbor 进行删除。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809213310.png" alt=""></p><p>如果想要删除该镜像，需要先通过 Notary 去掉镜像签名然后才可以删除。使用以下命令安装 Notary 客户端。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/theupdateframework/notary/releases/download/v0.6.1/notary-Linux-amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> notary-Linux-amd64</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/notary</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/notary</span></span></code></pre></div><p>去掉镜像的签名，注意后面 tag 和镜像名是用空格隔开的。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">notary</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://myharbor.com:30004</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-d </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">~/.docker/trust/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --tlscacert</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/.docker/tls/myharbor.com:30004/ca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remove </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">-p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myharbor.com:30003/sign/nginx-sign</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1.19</span></span></code></pre></div><p>查看镜像发现已经变成未签名的状态了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809214315.png" alt=""></p><p>此时就可以删除镜像了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809214453.png" alt=""></p><h2 id="垃圾清理" tabindex="-1">垃圾清理 <a class="header-anchor" href="#垃圾清理" aria-label="Permalink to &quot;垃圾清理&quot;">​</a></h2><p>在 Harbor 的日常使用过程中，对资源的使用会随着 Artifact 的增加而增加。由于资源有限，所以在删除 Artifact 后需要将其所占用的存储空间释放。当用户在 Harbor 中删除 Artifact 时是 “软删除”，即仅删除 Artifact 对应的数据记录，并不删除存储。垃圾回收的本质是对存储资源的自动管理，即回收 Harbor 中不再被使用的 Artifact 所占用的存储空间。</p><p>手动删除：</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809222629.png" alt=""></p><p>设置定时删除任务：</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20210809222735.png" alt=""></p><h2 id="一个小坑" tabindex="-1">一个小坑 <a class="header-anchor" href="#一个小坑" aria-label="Permalink to &quot;一个小坑&quot;">​</a></h2><p>通过 Docker 客户端登录 Harbor 时遇到证书过期的报错，搞了一晚上一直无法登录成功，结果第二天的时候莫名奇妙又可以成功登陆 Harbor 了。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#docker login https://myharbor.com:30003</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Username:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> admin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Password:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> response</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> daemon:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://myharbor.com:30003/v1/users/:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> x509:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> expired</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> yet</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> valid</span></span></code></pre></div><p>于是想到有可能是时间的问题，可能是 Docker 客户端的时间比证书生效的时间还早。查看了系统时间果然发现时间比标准时间慢了 6 分钟。设置 NTP 同步时间以后就可以正常登录了。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#date </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Mon</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:54:43</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> CST</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2021</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-nginx-cisp:/etc/docker/certs.d/myharbor.com:30003</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#ntpdate ntp3.aliyun.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:00:47</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ntpdate[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">96996</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">]:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> step</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> time</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 203.107</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.6.88</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> offset</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 355.206298</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ydt-net-nginx-cisp:/etc/docker/certs.d/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#date </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Mon</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Aug</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 21</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:00:51</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> CST</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2021</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#docker login https://myharbor.com:30003</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Username:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> admin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Password:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Login</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Succeeded</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li>Harbor 权威指南</li><li><a href="https://blog.csdn.net/weixin_34387468/article/details/91855502" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_34387468/article/details/91855502</a></li><li><a href="https://zhuanlan.zhihu.com/p/336866221" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/336866221</a></li><li><a href="https://fuckcloudnative.io/posts/install-harbor-on-kubernetes/" target="_blank" rel="noreferrer">https://fuckcloudnative.io/posts/install-harbor-on-kubernetes/</a></li><li><a href="https://goharbor.io/docs/1.10/install-config/configure-https/" target="_blank" rel="noreferrer">https://goharbor.io/docs/1.10/install-config/configure-https/</a></li><li><a href="https://www.bladewan.com/2020/02/22/harbor_notary/" target="_blank" rel="noreferrer">https://www.bladewan.com/2020/02/22/harbor_notary/</a></li></ul>`,262))])}const E=e(D,[["render",u]]);export{H as __pageData,E as default};

import{_ as l}from"./chunks/ArticleMetadata.TT7jIO3o.js";import{_ as p,D as k,o as t,c as r,I as d,w as g,k as h,a as F,R as o,b as c,e as y}from"./chunks/framework.FHZ5yb6k.js";import"./chunks/md5.0oexlRJv.js";const q=JSON.parse('{"title":"Git 速查手册","description":"","frontmatter":{"title":"Git 速查手册","author":"Se7en","date":"2024/08/01 10:00","categories":["个人速查手册"],"tags":["Git"]},"headers":[],"relativePath":"categories/fragments/2024/01-git.md","filePath":"categories/fragments/2024/01-git.md","lastUpdated":1722572354000}'),D={name:"categories/fragments/2024/01-git.md"},u=h("h1",{id:"git-速查手册",tabindex:"-1"},[F("Git 速查手册 "),h("a",{class:"header-anchor",href:"#git-速查手册","aria-label":'Permalink to "Git 速查手册"'},"​")],-1),m=o(`<h2 id="保持本地-fork-仓库与上游仓库同步" tabindex="-1">保持本地 Fork 仓库与上游仓库同步 <a class="header-anchor" href="#保持本地-fork-仓库与上游仓库同步" aria-label="Permalink to &quot;保持本地 Fork 仓库与上游仓库同步&quot;">​</a></h2><h3 id="设置上游仓库-只需要首次设置" tabindex="-1">设置上游仓库（只需要首次设置） <a class="header-anchor" href="#设置上游仓库-只需要首次设置" aria-label="Permalink to &quot;设置上游仓库（只需要首次设置）&quot;">​</a></h3><p>首先在 Github 上 fork 上游仓库。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20240802121219.png" alt=""></p><p>然后 clone fork 的仓库到本地。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 本例中是 git clone https://github.com/cr7258/higress.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">your-github-use</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">rep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">rep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><p>添加上游仓库作为远程仓库。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 本例中是 git remote add upstream https://github.com/alibaba/higress.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">upstrea</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">rep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.git</span></span></code></pre></div><p>验证上游仓库是否添加成功。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 示例输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">origin</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	https://github.com/cr7258/higress.git</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (fetch)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">origin</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	https://github.com/cr7258/higress.git</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (push)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	https://github.com/alibaba/higress.git</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (fetch)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	https://github.com/alibaba/higress.git</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (push)</span></span></code></pre></div><h3 id="同步上游仓库的更新" tabindex="-1">同步上游仓库的更新 <a class="header-anchor" href="#同步上游仓库的更新" aria-label="Permalink to &quot;同步上游仓库的更新&quot;">​</a></h3><p>获取上游仓库的更新。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> upstream</span></span></code></pre></div><p>将上游的更新 rebase 到本地分支。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> main</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 切换到你要更新的分支，通常是 main 或 master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> upstream/main</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 将上游的 main 分支 rebase 到本地的 main 分支</span></span></code></pre></div><p>解决可能的冲突，如果有冲突，Git 会提示你处理冲突，处理完冲突后继续 rebase。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --continue</span></span></code></pre></div><p>推送更新到你的 fork 仓库，如果使用了 rebase，需要强制推送。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> main</span></span></code></pre></div><h2 id="使用-git-worktree-管理多分支" tabindex="-1">使用 Git Worktree 管理多分支 <a class="header-anchor" href="#使用-git-worktree-管理多分支" aria-label="Permalink to &quot;使用 Git Worktree 管理多分支&quot;">​</a></h2><p>git worktree 允许你在同一仓库中同时检出多个分支，从而方便并行开发和减少频繁的分支切换，提高开发效率。</p><h3 id="创建一个新的-worktree" tabindex="-1">创建一个新的 Worktree <a class="header-anchor" href="#创建一个新的-worktree" aria-label="Permalink to &quot;创建一个新的 Worktree&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 方式一：基于当前分支，新建一个 worktree 目录，新的分支名就是新建目录的名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pat</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 示例：假设当前在 feature-1 分支，那么执行以下命令会在项目目录平级（假设在项目根目录执行命令）的 feature-2 目录下基于 feature-1 分支创建一个 feature-2 分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ../feature-2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 方式二：基于当前分支，新建一个 worktree 目录，新的分支名是指定的名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pat</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">branc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 方式三：基于指定分支，新建一个 worktree 目录，新的分支名是指定的名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pat</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">branc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit｜branc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 示例：假设当前在 feature-1 分支，那么执行以下命令会在项目目录平级（假设在项目根目录执行命令）的 feature-2 目录下基于 main 分支创建一个 feature-2 分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ../feature-2</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> feature-2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ../feature-2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> main</span></span></code></pre></div><h3 id="列出-worktree" tabindex="-1">列出 Worktree <a class="header-anchor" href="#列出-worktree" aria-label="Permalink to &quot;列出 Worktree&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 输出示例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/Users/I576375/tmp/git-demo/higress</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f5c0f4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [new-feature-1]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/Users/I576375/tmp/git-demo/hotfix-1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">       210</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">b97b</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [hotfix-1]</span></span></code></pre></div><h3 id="删除-worktree" tabindex="-1">删除 Worktree <a class="header-anchor" href="#删除-worktree" aria-label="Permalink to &quot;删除 Worktree&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remove</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">worktre</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worktree</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hotfix-1</span></span></code></pre></div><h3 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h3><ul><li><a href="https://www.cnblogs.com/wellcherish/p/17220100.html" target="_blank" rel="noreferrer">Git Worktree 的使用</a></li></ul>`,29);function b(s,C,A,v,f,_){const e=l,n=k("ClientOnly");return t(),r("div",null,[u,d(n,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(t(),c(e,{key:0,article:s.$frontmatter},null,8,["article"])):y("",!0)]}),_:1}),m])}const x=p(D,[["render",b]]);export{q as __pageData,x as default};

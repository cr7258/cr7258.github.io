import{_ as p}from"./chunks/ArticleMetadata.B38I6HZO.js";import{_ as k,C as o,c as r,o as t,k as e,G as d,P as F,a as c,w as y,b as g,e as C}from"./chunks/framework.DIkCQIk8.js";import"./chunks/md5.BFEskVOY.js";const w=JSON.parse('{"title":"Linux 速查手册","description":"","frontmatter":{"title":"Linux 速查手册","author":"Se7en","date":"2025/10/07 22:00","categories":["个人速查手册"],"tags":["Linux"]},"headers":[],"relativePath":"categories/fragments/个人速查手册/10-linux.md","filePath":"categories/fragments/个人速查手册/10-linux.md","lastUpdated":1759851316000}'),u={name:"categories/fragments/个人速查手册/10-linux.md"};function m(i,s,f,D,_,x){const l=p,h=o("ClientOnly");return t(),r("div",null,[s[0]||(s[0]=e("h1",{id:"linux-速查手册",tabindex:"-1"},[c("Linux 速查手册 "),e("a",{class:"header-anchor",href:"#linux-速查手册","aria-label":'Permalink to "Linux 速查手册"'},"​")],-1)),d(h,null,{default:y(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(t(),g(l,{key:0,article:i.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),s[1]||(s[1]=F(`<h2 id="解决-too-many-open-files-错误" tabindex="-1">解决 too many open files 错误 <a class="header-anchor" href="#解决-too-many-open-files-错误" aria-label="Permalink to &quot;解决 too many open files 错误&quot;">​</a></h2><p>出现 <code>too many open files</code> 的原因通常有两个：</p><ul><li>进程打开的文件、socket 或 fsnotify watcher 数量超过 <code>ulimit -n</code> 限制；</li><li>或系统的 inotify 参数（<code>fs.inotify.max_user_watches</code> / <code>max_user_instances</code>）太低，导致无法再创建新的文件监听器。</li></ul><p>临时调整（当前会话有效）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 文件描述符</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 65535</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># inotify watcher 数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fs.inotify.max_user_watches=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">524288</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fs.inotify.max_user_instances=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1024</span></span></code></pre></div><p>永久提升：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 文件描述符</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;* soft nofile 65535&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/security/limits.conf</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;* hard nofile 65535&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/security/limits.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># inotify watcher 数量</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;fs.inotify.max_user_watches=524288&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/sysctl.conf</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;fs.inotify.max_user_instances=1024&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/sysctl.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 立即生效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span></span></code></pre></div>`,7))])}const A=k(u,[["render",m]]);export{w as __pageData,A as default};

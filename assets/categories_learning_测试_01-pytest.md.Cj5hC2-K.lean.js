import{_ as h}from"./chunks/ArticleMetadata.Cxlq8Gj7.js";import{_ as k,C as r,c as d,o as n,k as e,G as o,P as c,a as y,w as g,b as C,e as u}from"./chunks/framework.DIkCQIk8.js";import"./chunks/md5.BFEskVOY.js";const E=JSON.parse('{"title":"Pytest","description":"","frontmatter":{"title":"Pytest","author":"Se7en","categories":["Test"],"tags":["Test"]},"headers":[],"relativePath":"categories/learning/测试/01-pytest.md","filePath":"categories/learning/测试/01-pytest.md","lastUpdated":1755410312000}'),A={name:"categories/learning/测试/01-pytest.md"};function D(i,s,F,B,m,f){const p=h,l=r("ClientOnly");return n(),d("div",null,[s[0]||(s[0]=e("h1",{id:"pytest-测试框架",tabindex:"-1"},[y("Pytest 测试框架 "),e("a",{class:"header-anchor",href:"#pytest-测试框架","aria-label":'Permalink to "Pytest 测试框架"'},"​")],-1)),o(l,null,{default:g(()=>{var a,t;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((t=i.$frontmatter)==null?void 0:t.showArticleMetadata)??!0)?(n(),C(p,{key:0,article:i.$frontmatter},null,8,["article"])):u("",!0)]}),_:1}),s[1]||(s[1]=c(`<h2 id="pytest-测试用例发现规则" tabindex="-1">Pytest 测试用例发现规则 <a class="header-anchor" href="#pytest-测试用例发现规则" aria-label="Permalink to &quot;Pytest 测试用例发现规则&quot;">​</a></h2><p>Pytest 以特定规则识别测试用例，所以测试用例文件、测试类以及类中的方法、测试函数这些命名都必须符合规则，才能被 Pytest 识别到并加入测试运行队列中。如果不遵循 Pytest 的命名规则会导致 Pytest 识别不到测试用例。</p><table><thead><tr><th>类型</th><th>规则</th></tr></thead><tbody><tr><td>文件</td><td><code>test_</code> 开头或 <code>_test</code> 结尾</td></tr><tr><td>类</td><td><code>Test</code> 开头</td></tr><tr><td>方法/函数</td><td><code>test_</code> 开头或 <code>_test</code> 结尾</td></tr></tbody></table><p>注意：</p><ul><li>测试类中不可以添加 <code>__init__</code> 构造函数。</li><li>上述表格内的规则全部同时满足的方法或函数才能被自动发现。</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 文件名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 示例：test_example.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 类名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> TestExample</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # 方法名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_case1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_case2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 函数名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_addition</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_subtraction</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pass</span></span></code></pre></div><h2 id="fixture" tabindex="-1">Fixture <a class="header-anchor" href="#fixture" aria-label="Permalink to &quot;Fixture&quot;">​</a></h2><p>在 pytest 中，fixture 是一种用于为测试用例提供可重用资源或设置环境的机制。fixture 可以帮助你在测试前后执行初始化或清理操作，比如设置数据库连接、创建临时文件、准备测试数据等。</p><h3 id="传参调用" tabindex="-1">传参调用 <a class="header-anchor" href="#传参调用" aria-label="Permalink to &quot;传参调用&quot;">​</a></h3><p>在测试用例参数中直接传入 fixture 名，pytest 会自动寻找、调用对应的 fixture，并返回其结果。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pytest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">@pytest.fixture</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> sample_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_length</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(sample_data):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(sample_data) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span></span></code></pre></div><h3 id="手动调用-usefixtures" tabindex="-1">手动调用 usefixtures <a class="header-anchor" href="#手动调用-usefixtures" aria-label="Permalink to &quot;手动调用 usefixtures&quot;">​</a></h3><p>通过 <code>@pytest.mark.usefixtures(&quot;fixture_name&quot;)</code> 标记测试类或方法，手动调用 fixture，但不能直接获得返回值，主要用于 setup/teardown。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pytest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">@pytest.fixture</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> demo_fixture</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Preparing data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">@pytest.mark.usefixtures</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;demo_fixture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> test_demo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Test case execution&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 输出结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Preparing data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Test case execution</span></span></code></pre></div>`,14))])}const P=k(A,[["render",D]]);export{E as __pageData,P as default};

import{_ as p}from"./chunks/ArticleMetadata.d4_nZKBO.js";import{_ as k,D as e,o as n,c as r,I as d,w as g,R as t,b as A,e as c}from"./chunks/framework.FHZ5yb6k.js";import"./chunks/md5.0oexlRJv.js";const _=JSON.parse('{"title":"Elasticsearch Java API Client 开发","description":"","frontmatter":{"title":"Elasticsearch Java API Client 开发","author":"Se7en","date":"2022/12/25 14:49","categories":["Elastic Stack 实战教程"],"tags":["Elastic Stack","Elasticsearch"]},"headers":[],"relativePath":"en/courses/elastic-stack/01-elastic-stack-hands-on-lab/05-java-client.md","filePath":"en/courses/elastic-stack/01-elastic-stack-hands-on-lab/05-java-client.md","lastUpdated":1704466962000}'),y={name:"en/courses/elastic-stack/01-elastic-stack-hands-on-lab/05-java-client.md"},o=t('<p>本系列 Elastic Stack 实战教程总共涵盖 5 个实验，目的是帮助初学者快速掌握 Elastic Stack 的基本技能。</p><blockquote><p><a href="https://developer.aliyun.com/adc/scenarioSeries/24e7a7a4d56741d0bdcb3ee73c9c22f1" target="_blank" rel="noreferrer">云起实验室在线体验地址</a></p><ul><li>实验 1：Elastic Stack 8 快速上手</li><li>实验 2：ILM 索引生命周期管理</li><li>实验 3：快照备份与恢复</li><li>实验 4：使用 Fleet 管理 Elastic Agent 监控应用</li><li>实验 5：Elasticsearch Java API Client 开发</li></ul></blockquote><h1 id="elasticsearch-java-api-client-开发" tabindex="-1">Elasticsearch Java API Client 开发 <a class="header-anchor" href="#elasticsearch-java-api-client-开发" aria-label="Permalink to &quot;Elasticsearch Java API Client 开发&quot;">​</a></h1>',3),D=t(`<h3 id="_1-elasticsearch-jave-client-介绍" tabindex="-1">1 Elasticsearch Jave Client 介绍 <a class="header-anchor" href="#_1-elasticsearch-jave-client-介绍" aria-label="Permalink to &quot;1 Elasticsearch Jave Client 介绍&quot;">​</a></h3><p>Elastic 在 7.16 版本（2021年12月8日）推出了 Elasticsearch Java API Client。在此之前，我们通常使用 High Level REST Client 进行开发，但是 High Level REST Client 存在几个缺陷：</p><ul><li>1.引入了许多非必要相关的依赖，并且暴露了很多服务器的内部接口。</li><li>2.一致性差，需要大量的维护工作。</li><li>3.没有集成 json/object 类型映射，需要自己借助字节缓存区实现。</li></ul><p>Elasticsearch Java API Client 有以下三个典型特点：</p><ul><li>1.对象构造基于建造者模式（Builder Pattern），使用多个简单的对象一步一步构建成一个复杂的对象，增强了客户端代码的可用性和可读性。</li><li>2.使用 Lambda 构建嵌套对象，使得编写干净、富有表现力的 DSL 变得容易。</li><li>3.应用程序类能自动映射为 Mapping。</li></ul><p>本实验中我们将使用 Elasticsearch Java API Client 进行开发，实现常用的 CRUD 操作。</p><h3 id="_2-启动实验环境" tabindex="-1">2 启动实验环境 <a class="header-anchor" href="#_2-启动实验环境" aria-label="Permalink to &quot;2 启动实验环境&quot;">​</a></h3><p>首先执行以下命令修改系统参数以满足 Elasticsearch 的运行条件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 增加进程可使用的最大内存映射区域数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/sysctl.conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;"> EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vm.max_map_count=262144</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 增加进程可使用的最大文件描述符数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/security/limits.conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;"> EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">elastic - nofile  65535</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 65535</span></span></code></pre></div><p>为了方便实验，本节采用 Docker Compose 的方式快速部署 Elasticsearch 集群。执行如下命令，安装 Docker 和 Docker Compose。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://gitee.com/cr7258/elastic-lab.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -sSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://get.daocloud.io/docker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-compose</span></span></code></pre></div><p>执行如下命令，获取 docker-compose.yml 配置文件，并在后台启动 Elasticsearch 集群。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> elastic-lab/5_java_develop/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span></span></code></pre></div><p>执行 <code>docker-compose ps</code> 命令查看容器运行状态，其中 5java_develop_setup_1 容器是用于创建证书以及设置 elastic 和 kibana_system 用户密码的，执行完毕后会自动退出，我们需要确保其他容器处于 Up 状态。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220819154838.png" alt=""></p><h3 id="_3-本地环境准备" tabindex="-1">3 本地环境准备 <a class="header-anchor" href="#_3-本地环境准备" aria-label="Permalink to &quot;3 本地环境准备&quot;">​</a></h3><p>本地需要提前安装好以下工具：</p><ul><li><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noreferrer">Git</a></li><li><a href="https://www.oracle.com/java/technologies/downloads/#java8-windows" target="_blank" rel="noreferrer">JDK</a></li><li><a href="https://www.jetbrains.com/zh-cn/idea/" target="_blank" rel="noreferrer">IntelliJ IDEA</a></li></ul><p>在本地电脑执行以下命令，克隆代码。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://gitee.com/cr7258/elastic-lab.git</span></span></code></pre></div><p>打开 IntelliJ IDEA 工具，点击 <strong>OPEN</strong>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220819155348.png" alt=""></p><p>选择打开 <strong>elastic-lab -&gt; 5_java_develop -&gt; elasticsearch_java_api_client</strong> 项目目录。注意在 IDEA 中打开的是 elasticsearch_java_api_client 目录，这样 IDEA 才可以正确识别出这是一个 gradle 项目，gradle 所需的文件 IDEA 会自动进行下载。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220819155442.png" alt=""></p><p>打开 <strong>IntelliJ IDEA 设置 -&gt; Build, Execution, Deployment -&gt; Build Tools -&gt; Gradle</strong>，将 Run tests using 改为 <strong>IntelliJ IDEA</strong>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220819160916.png" alt=""></p><h3 id="_3-引入依赖" tabindex="-1">3 引入依赖 <a class="header-anchor" href="#_3-引入依赖" aria-label="Permalink to &quot;3 引入依赖&quot;">​</a></h3><p>在本实验中，将使用 gradle 项目进行演示，Elasticsearch 所需的依赖如下。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    implementation</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> &#39;co.elastic.clients</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">elasticsearch-java:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8.2</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    implementation</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> &#39;com.fasterxml.jackson.core:jackson-databind:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2.12</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>另外为了方便我们编写代码，本实验中还使用了 lombok, spring boot 等组件，完整的 gradle 依赖文件请参见 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/build.gradle" target="_blank" rel="noreferrer">build.gradle</a>。</p><h3 id="_4-连接集群" tabindex="-1">4 连接集群 <a class="header-anchor" href="#_4-连接集群" aria-label="Permalink to &quot;4 连接集群&quot;">​</a></h3><p>创建 Elasticsearch Java API Client 主要分为以下 3 步：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 1.创建 low-level client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">RestClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> restClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RestClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> HttpHost</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;localhost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9200</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 2.创建 transport </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ElasticsearchTransport</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> transport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> RestClientTransport</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    restClient, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> JacksonJsonpMapper</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 3.创建 api client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ElasticsearchClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ElasticsearchClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(transport);</span></span></code></pre></div><p>由于我们部署的 Elasticsearch 8.x 集群设置了用户名和密码，并且启用了 HTTPS 加密，因此我们在构建 low-level client 的使用还需要进行相应的设置。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">RestClientBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RestClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(httpHost)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setHttpClientConfigCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(httpClientBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> httpClientBuilder  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setSSLContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(sslContext)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 设置 SSL 加密通信的方式  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setDefaultCredentialsProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(credentialsProvider) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 设置用户名密码  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setSSLHostnameVerifier</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(NoopHostnameVerifier.INSTANCE)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 不验证 SSL 证书主机名</span></span></code></pre></div><p>连接 Elaticsearch 的完整代码可以在 <a href="https://gitee.com/cr7258/elastic-lab/tree/master/5_java_develop/elasticsearch_java_api_client/src/main/java/com/elasticlab/config" target="_blank" rel="noreferrer">config</a> 目录中获取。</p><p>以下两个文件用户需要根据实际情况进行配置，文件路径在 elastic-lab/5_java_develop/elasticsearch_java_api_client/src/main/resources。</p><ul><li><strong>application.yml</strong>：设置 Elasticsearch 的连接信息。其中用户名和密码是在 elastic-lab/5_java_develop/.env 文件中设置的，address 是 ECS 服务器对应的 &lt;公网 IP&gt;:9200。</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">elasticsearch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  schema</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  address</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&lt;公网 IP&gt;:9200</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 需要修改  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  username</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">elastic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  password</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">elastic123</span></span></code></pre></div><ul><li><strong>ca.crt</strong>：由于我们部署的 Elasticsearch 使用的是自签名的 CA，需要设置信任的 CA 证书。在 ECS 上执行以下命令获取证书内容，并保存到 ca.crt 文件中。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">javadevelop_es01_1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> config/certs/ca/ca.crt</span></span></code></pre></div><h3 id="_5-创建实体类" tabindex="-1">5 创建实体类 <a class="header-anchor" href="#_5-创建实体类" aria-label="Permalink to &quot;5 创建实体类&quot;">​</a></h3><p>创建一个 Product.java 文件用于保存商品字段。这里使用了 lombok 的 3 个注解会帮助我们生成需要的构造方法以及 Getter, Setter 方法。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lombok.AllArgsConstructor;  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lombok.Data;  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lombok.NoArgsConstructor;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> chengzw  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * @description 商品实体类  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@since</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> 2022/8/1  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AllArgsConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NoArgsConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> name;  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    double</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> price;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>完成准备工作后，接下来我们将尝试对 Elasticsearch 执行增删改查操作。</p><h3 id="_6-写入文档" tabindex="-1">6 写入文档 <a class="header-anchor" href="#_6-写入文档" aria-label="Permalink to &quot;6 写入文档&quot;">​</a></h3><p>Elasticsearch Java API Client 提供了两种索引文档的方式：</p><ul><li>1.提供一个应用对象，Elasticsearch Client 负责将对象映射为 JSON。</li><li>2.直接提供原始的 JSON 数据。</li></ul><p>如下所示，我们创建了一个 Product 对象，将数据写入索引 products 中，并使用商品 id 作为 doc id。Elasticsearch Client 会自动将 Product 对象转换为 JSON 数据，然后向 Elasticsearch 发送索引请求。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> product</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;computer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9999.99</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">IndexResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 索引名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(product.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// doc id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(product)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>在 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/IndexingTest.java" title="IndexingTest.java" target="_blank" rel="noreferrer">IndexingTest.java</a> 文件中可以找到完整代码，点击 <code>indexObject()</code> 方法左边的运行按钮执行上述代码。执行完成后，在最下方可以看到响应结果，可以看到数据已经成功写入 products 索引了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807104133.png" alt=""></p><p>浏览器输入<code>http://&lt;ESC 公网 IP&gt;:5601</code>访问 Kibana 界面。输入用户名 <strong>elastic</strong>，密码 <strong>elastic123</strong>，点击 <strong>Login in</strong>。其中密码是在 elastic-lab/5_java_develop/.env 文件中设置的。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220709215009.png" alt=""></p><p>点击 <strong>Management -&gt; Dev Tools -&gt; Console</strong>，打开 Kibana Console 界面。执行以下命令，查询 products 索引的数据，可以看到 id 为 sn10001 的文档已经被成功写入了。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET products/_search</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;took&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;timed_out&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_shards&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;successful&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;skipped&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;failed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;relation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;eq&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;computer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9999.99</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>当你要索引的数据来自外部时，为这些数据创建实体类可能会很麻烦，这时候你可以使用 <code>withJson()</code> 方法将原始的 JSON 数据作为索引请求的文档内容。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> StringReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;{&#39;id&#39;: &#39;sn10003&#39;, &#39;name&#39;: &#39;television&#39;, &#39;price&#39;: 5500.5}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">IndexRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">JsonData</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> IndexRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">withJson</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(input)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">IndexResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(request);</span></span></code></pre></div><p>在 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/IndexingTest.java" title="IndexingTest.java" target="_blank" rel="noreferrer">IndexingTest.java</a> 文件中可以找到完整代码，点击 <code>indexWithJson()</code> 方法左边的运行按钮执行上述代码。</p><p>为了提升写入数据的效率，我们可以提前准备好一批数据，使用 bulk API 在一次网络请求中将数据批量写入 Elasticsearch 中。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Product</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">products</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ArrayList&lt;&gt;();  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">products.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10004&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;T-shirt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100.5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">products.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10005&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;phone&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8999.9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">products.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10006&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ipad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6555.5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">BulkRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> br</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> BulkRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> product</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> products) {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    br.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">operations</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(op </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> op  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> idx  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(product.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(product)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            )    );  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">BulkResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">bulk</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(br.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span></code></pre></div><p>在 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/IndexingTest.java" title="IndexingTest.java" target="_blank" rel="noreferrer">IndexingTest.java</a> 文件中可以找到完整代码，点击 <code>indexBulkObject()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807114641.png" alt=""></p><h3 id="_7-查询文档" tabindex="-1">7 查询文档 <a class="header-anchor" href="#_7-查询文档" aria-label="Permalink to &quot;7 查询文档&quot;">​</a></h3><p>使用 get 请求可以根据 id 来获取文档。get 请求有两个参数：</p><ul><li>第一个参数是实际请求，在下面用 fluent DSL 构建。</li><li>第二个参数是希望将文档的 JSON 映射到的类。</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">GetResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Product</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> g  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Product.class);</span></span></code></pre></div><p>在<a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/SearchingTest.java" title="SearchingTest.java" target="_blank" rel="noreferrer">SearchingTest.java</a> 文件中可以找到完整代码，点击 <code>getById()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807214429.png" alt=""></p><p>接下来我们尝试使用 match 查询语句来搜索 name 字段中包含 computer 关键字的文档，DSL 语句如下所示，我们可以先在 Kibana 上执行以下命令查看结果。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET products/_search</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;match&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;computer&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;took&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;timed_out&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_shards&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;successful&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;skipped&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;failed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;relation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;eq&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.4877305</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.4877305</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 文档评分</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : { </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 文档内容</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;computer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9999.99</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>我们可以使用以下代码实现上述的全文查询，可以看出 search 是 Elasticsearch Java API Client 的一大优势，使用 Lambda 构建嵌套对象，大大简化了代码量，并且增强了代码的可读性。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> searchText</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;computer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SearchResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Product</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">search</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> s  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> q  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(searchText)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        )                )        , Product.class);</span></span></code></pre></div><p>在<a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/SearchingTest.java" title="SearchingTest.java" target="_blank" rel="noreferrer">SearchingTest.java</a> 文件中可以找到完整代码，点击 <code>search()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807212450.png" alt=""></p><p>使用聚合查询可以对索引中的数据进行统计，如下所示，我们使用 terms 聚合查询来计算每种商品的数量。由于 name 字段的类型是 text 类型，默认情况下 text 类型是不允许进行聚合操作的，因此这里使用 name 字段的 keyword 类型的子字段 keyword 来进行聚合查询。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET products/_search</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">// 不返回文档</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;aggs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;product-term&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;terms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;field&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name.keyword&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;took&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;timed_out&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_shards&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;successful&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;skipped&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;failed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;relation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;eq&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : [ ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;aggregations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;product-term&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;doc_count_error_upper_bound&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;sum_other_doc_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;buckets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;T-shirt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;doc_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;computer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;doc_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ipad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;doc_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;phone&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;doc_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;television&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;doc_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>我们可以使用以下代码实现上述的聚合查询，这个例子是一个分析类型的聚合，不需要返回文档内容，因此可以将 size 设置为零，并将搜索结果的目标类设置为 Void.class。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SearchResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Void</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">search</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> b  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">aggregations</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;product-term&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> a  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">terms</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name.keyword&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ), Void.class);</span></span></code></pre></div><p>在<a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/AggregationsTest.java" title="AggregationsTest.java" target="_blank" rel="noreferrer">AggregationsTest.java</a> 文件中可以找到完整代码，点击 <code>productTerm()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807115355.png" alt=""></p><h3 id="_8-删除文档" tabindex="-1">8 删除文档 <a class="header-anchor" href="#_8-删除文档" aria-label="Permalink to &quot;8 删除文档&quot;">​</a></h3><p>删除文档通常有两种方式：</p><ul><li>1.指定 doc id 删除单条文档。</li><li>2.通过 deleteByQuery 查询匹配删除单条或多条文档。</li></ul><p>如下所示，指定删除索引 products 中 id 为 sn10005 的文档。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DeleteResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> d  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10005&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span></code></pre></div><p>在<a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/DeletingTest.java" title="DeletingTest.java" target="_blank" rel="noreferrer">DeletingTest.java</a> 文件中可以找到完整代码，点击 <code>deleteById()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807213802.png" alt=""></p><p>批量删除文档可以使用 deleteByQuery。如下所示，删除索引 products 中所有 name 字段的值是 ipad 的文档。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> searchText</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;ipad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">DeleteByQueryResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">deleteByQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        d.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> q  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(searchText))));</span></span></code></pre></div><p>在 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/DeletingTest.java" title="DeletingTest.java" target="_blank" rel="noreferrer">DeletingTest.java</a> 文件中可以找到完整代码，点击 <code>deleteByQuery()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807213833.png" alt=""></p><h3 id="_9-更新文档" tabindex="-1">9 更新文档 <a class="header-anchor" href="#_9-更新文档" aria-label="Permalink to &quot;9 更新文档&quot;">​</a></h3><p>和删除文档类似，更新文档通常也有两种方式：</p><ul><li>1.指定 doc id 更新单条文档。</li><li>2.通过 updateByQuery 查询匹配更新单条或多条文档。</li></ul><p>我们在更新文档的时候可以在请求体的 doc 参数中指定要更新的字段内容。如下所示，更新 doc id 为 sn10001 的文档的 price 字段值为 7777.77。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">POST products/_update/sn10001</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;doc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7777.77</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>我们可以使用以下代码实现上述的单条更新操作，首先创建一个 Product 对象，然后设置对象的 price 字段值为 7777.77，然后使用 update 请求设置更新的索引名和 doc id，并传入 Product 对象。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> product</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Product</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">product.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setPrice</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7777.77</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">UpdateResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Product</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> u  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10005&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">doc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(product), Product.class);</span></span></code></pre></div><p>在 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/UpdatingTest.java" title="UpdatingTest.java" target="_blank" rel="noreferrer">UpdatingTest.java</a> 文件中可以找到完整代码，点击 <code>updateById()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807214629.png" alt=""></p><p>在 Kibana 查询 doc id 为 sn10001 的文档，可以看到 price 字段值已经被成功修改为 7777.77 了。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET products/_doc/sn10001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_seq_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_primary_term&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;found&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;computer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7777.77</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>批量更新文档可以使用 updateByQuery。如下所示，将索引 products 中所有 name 字段的值是 T-shirt 的文档的 price 字段值增加 1000，使用 painless script 可以实现更加复杂的操作。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">POST products/_update_by_query</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;match&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;T-shirt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    ctx._source.price += 1000</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;lang&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;painless&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>我们可以使用以下代码实现上述的批量更新操作，在 InlineScript 中可以设置批量更新使用的 painless script。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">UpdateByQueryResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> esClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">updateByQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> u  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> s  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">inline</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(InlineScript.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;painless&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ctx._source.price += 1000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))))  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> q  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> m  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;T-shirt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))));</span></span></code></pre></div><p>在 <a href="https://gitee.com/cr7258/elastic-lab/blob/master/5_java_develop/elasticsearch_java_api_client/src/test/java/com/elasticlab/UpdatingTest.java" title="UpdatingTest.java" target="_blank" rel="noreferrer">UpdatingTest.java</a> 文件中可以找到完整代码，点击 <code>updateByQuery()</code> 方法左边的运行按钮执行上述代码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220807214815.png" alt=""></p><p>查询 name 字段值是 T-shirt 的文档，可以看到 price 字段值已经增加 1000 了。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">GET products/_search</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;match&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;T-shirt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;took&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;timed_out&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;_shards&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;successful&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;skipped&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;failed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;relation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;eq&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.2199391</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;hits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;products&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10004&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_score&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.2199391</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;_source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1100.5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;T-shirt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sn10004&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,111);function F(s,C,B,u,E,q){const l=p,h=e("ClientOnly");return n(),r("div",null,[o,d(h,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),A(l,{key:0,article:s.$frontmatter},null,8,["article"])):c("",!0)]}),_:1}),D])}const j=k(y,[["render",F]]);export{_ as __pageData,j as default};

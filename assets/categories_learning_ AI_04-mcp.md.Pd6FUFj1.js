import{_ as i}from"./chunks/ArticleMetadata.Yw6SSleQ.js";import{_ as s,D as c,o,c as p,I as h,w as m,k as a,a as d,R as C,b as P,e as g}from"./chunks/framework.FHZ5yb6k.js";import"./chunks/md5.0oexlRJv.js";const q=JSON.parse('{"title":"Model Context Protocol（MCP）","description":"","frontmatter":{"title":"Model Context Protocol（MCP）","author":"Se7en","categories":["AI"],"tags":["AI","MCP"]},"headers":[],"relativePath":"categories/learning/ AI/04-mcp.md","filePath":"categories/learning/ AI/04-mcp.md","lastUpdated":1735831123000}'),_={name:"categories/learning/ AI/04-mcp.md"},u=a("h1",{id:"model-context-protocol-mcp-模型上下文协议",tabindex:"-1"},[d("Model Context Protocol（MCP，模型上下文协议） "),a("a",{class:"header-anchor",href:"#model-context-protocol-mcp-模型上下文协议","aria-label":'Permalink to "Model Context Protocol（MCP，模型上下文协议）"'},"​")],-1),M=C('<h2 id="什么是-mcp" tabindex="-1">什么是 MCP？ <a class="header-anchor" href="#什么是-mcp" aria-label="Permalink to &quot;什么是 MCP？&quot;">​</a></h2><p>模型上下文协议（MCP）是 Anthropic 推出的开放标准，旨在通过统一的客户端-服务器架构解决 LLM 应用与数据源连接的难题。它支持通过同一协议访问本地资源（如数据库、文件）和远程资源（如 Slack、GitHub API）。</p><h2 id="mcp-架构" tabindex="-1">MCP 架构 <a class="header-anchor" href="#mcp-架构" aria-label="Permalink to &quot;MCP 架构&quot;">​</a></h2><p>MCP 遵循客户端-服务器架构（client-server），其中：</p><ul><li><strong>MCP 主机（MCP Hosts）</strong>：希望通过 MCP 访问资源的程序（例如 Claude Desktop、IDE 或 AI 工具），用于发起连接。</li><li><strong>MCP 客户端（MCP Clients）</strong>：与服务器保持 1:1 连接的协议客户端。</li><li><strong>MCP 服务器（MCP Servers）</strong>：轻量级程序，每个程序都通过标准化模型上下文协议公开特定功能。为客户端提供上下文、工具和 prompt 信息。</li><li><strong>本地资源（Local Resources）</strong>：你的计算机资源中可供 MCP 服务器安全访问的资源（数据库、文件、服务）。</li><li><strong>远程资源（Remote Resources）</strong>：MCP 服务器可以连接到的互联网资源（例如通过 API）。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202501021941097.png" alt=""></p><h2 id="mcp-学习资料" tabindex="-1">MCP 学习资料 <a class="header-anchor" href="#mcp-学习资料" aria-label="Permalink to &quot;MCP 学习资料&quot;">​</a></h2><table><thead><tr><th>资料</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://github.com/punkpeye/awesome-mcp-servers" target="_blank" rel="noreferrer">awesome-mcp-servers</a><br><a href="https://github.com/modelcontextprotocol/servers" target="_blank" rel="noreferrer">Model Context Protocol Servers</a></td><td>MCP Server 汇总</td></tr></tbody></table><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/ASmcjW53HKokdYt1m-xyXA" target="_blank" rel="noreferrer">深度解析：Anthropic MCP 协议</a></li><li><a href="https://www.anthropic.com/news/model-context-protocol" target="_blank" rel="noreferrer">Introducing the Model Context Protocol</a></li><li><a href="https://sspai.com/post/94360" target="_blank" rel="noreferrer">Claude 的 MCP (模型上下文协议）有啥用？</a></li><li><a href="https://www.bilibili.com/video/BV1H5z3YzEii" target="_blank" rel="noreferrer">Claude MCP：claude开源万能数据插头MCP协议</a></li><li><a href="https://www.100ai.xyz/mcpservers" target="_blank" rel="noreferrer">MCP Server 汇总</a></li><li><a href="https://spring.io/blog/2024/12/11/spring-ai-mcp-announcement" target="_blank" rel="noreferrer">Announcing Spring AI MCP: A Java SDK for the Model Context Protocol</a></li><li><a href="https://mp.weixin.qq.com/s/Fg59pSdVIGTjDyEC3pAWXQ" target="_blank" rel="noreferrer">Spring AI 智能体通过 MCP 集成本地文件数据</a></li><li><a href="https://github.com/punkpeye/awesome-mcp-servers" target="_blank" rel="noreferrer">awesome-mcp-servers</a></li></ul>',10);function f(e,b,k,A,x,w){const l=i,n=c("ClientOnly");return o(),p("div",null,[u,h(n,null,{default:m(()=>{var t,r;return[(((t=e.$frontmatter)==null?void 0:t.aside)??!0)&&(((r=e.$frontmatter)==null?void 0:r.showArticleMetadata)??!0)?(o(),P(l,{key:0,article:e.$frontmatter},null,8,["article"])):g("",!0)]}),_:1}),M])}const y=s(_,[["render",f]]);export{q as __pageData,y as default};

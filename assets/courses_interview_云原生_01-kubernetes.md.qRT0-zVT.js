import{_ as e,o as t,c as a,R as o}from"./chunks/framework.FHZ5yb6k.js";const h=JSON.parse('{"title":"Kubernetes","description":"","frontmatter":{"title":"Kubernetes","author":"Se7en","categories":["Interview"],"tags":["Kubernetes"]},"headers":[],"relativePath":"courses/interview/云原生/01-kubernetes.md","filePath":"courses/interview/云原生/01-kubernetes.md","lastUpdated":1726761436000}'),r={name:"courses/interview/云原生/01-kubernetes.md"},l=o('<h2 id="kubelet" tabindex="-1">Kubelet <a class="header-anchor" href="#kubelet" aria-label="Permalink to &quot;Kubelet&quot;">​</a></h2><h3 id="_1-kubelet-的作用是什么" tabindex="-1">1 Kubelet 的作用是什么？ <a class="header-anchor" href="#_1-kubelet-的作用是什么" aria-label="Permalink to &quot;1 Kubelet 的作用是什么？&quot;">​</a></h3><p>Kubelet 是 Kubernetes 中最重要的节点代理程序，运行在集群中的每个节点上。它能够自动将节点注册到 Kubernetes 集群，将节点、Pod 的运行状态和资源使用情况周期性地上报至 API Server，同时接收 API Server 下发的工作任务、启动或停止容器、维护和管理 Pod。</p><h3 id="_2-kubelet-获取-podspec-的来源有哪些" tabindex="-1">2 Kubelet 获取 PodSpec 的来源有哪些？ <a class="header-anchor" href="#_2-kubelet-获取-podspec-的来源有哪些" aria-label="Permalink to &quot;2 Kubelet 获取 PodSpec 的来源有哪些？&quot;">​</a></h3><p>Kubelet 获取 PodSpec 的来源有 3 种，即 API Server、file 和 HTTP：</p><ul><li>API Server 是 Kubelet 获取 PodSpec 的主要来源，Kubelet 通过 Informer List-Watch 机制持续获取来自 API Server 的 Pod 变化事件，触发执行 sync 调谐。</li><li>file 和 HTTP 主要用于发现 Static Pod，Kubelet 默认每隔 20 秒执行一次检测，重新从文件或 HTTP 地址加载 PodSpec。为了加速配置变更检测的速度，对于 Linux 下 file 类型的 Static Pod，Kubelet 支持通过 fsnotify 方式 Watch 指定文件夹下的变更事件。</li><li>file 通过 <code>staticPodPath</code> 配置指定 Static Pod 配置文件的路径（以前是 <code>--pod-manifest-path</code> 参数），默认监听的文件夹地址是 <code>/etc/kubernetes/manifests</code>；HTTP 通过 <code>staticPodURL</code> 配置指定 Static Pod 配置文件的 URL（以前是 <code>--manifest-url</code> 参数）。</li></ul><h3 id="_3-pod-lifecycle-event-generator-pleg-在-kubelet-中的作用和工作原理" tabindex="-1">3 Pod Lifecycle Event Generator (PLEG) 在 Kubelet 中的作用和工作原理 <a class="header-anchor" href="#_3-pod-lifecycle-event-generator-pleg-在-kubelet-中的作用和工作原理" aria-label="Permalink to &quot;3 Pod Lifecycle Event Generator (PLEG) 在 Kubelet 中的作用和工作原理&quot;">​</a></h3>',7),c=[l];function i(n,s,d,u,b,P){return t(),a("div",null,c)}const p=e(r,[["render",i]]);export{h as __pageData,p as default};

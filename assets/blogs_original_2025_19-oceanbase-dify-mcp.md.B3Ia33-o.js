import{_ as l}from"./chunks/ArticleMetadata.CHA3f0eO.js";import{_ as k,C as r,c,o as e,k as t,G as d,P as F,a as o,w as g,b as y,e as D}from"./chunks/framework.PU6D6dP3.js";import"./chunks/md5.BwKp3kP6.js";const v=JSON.parse('{"title":"Dify + OceanBase + MCP：三剑合璧，轻松构建 RAG 应用","description":"","frontmatter":{"title":"Dify + OceanBase + MCP：三剑合璧，轻松构建 RAG 应用","author":"Se7en","date":"2025/06/27 11:50","categories":["AI"],"tags":["AI","RAG","Dify","OceanBase","MCP"]},"headers":[],"relativePath":"blogs/original/2025/19-oceanbase-dify-mcp.md","filePath":"blogs/original/2025/19-oceanbase-dify-mcp.md","lastUpdated":1751040562000}'),C={name:"blogs/original/2025/19-oceanbase-dify-mcp.md"};function u(i,s,f,m,A,b){const p=l,h=r("ClientOnly");return e(),c("div",null,[s[0]||(s[0]=t("h1",{id:"dify-oceanbase-mcp-三剑合璧-轻松构建-rag-应用",tabindex:"-1"},[o("Dify + OceanBase + MCP：三剑合璧，轻松构建 RAG 应用 "),t("a",{class:"header-anchor",href:"#dify-oceanbase-mcp-三剑合璧-轻松构建-rag-应用","aria-label":'Permalink to "Dify + OceanBase + MCP：三剑合璧，轻松构建 RAG 应用"'},"​")],-1)),d(h,null,{default:g(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(e(),y(p,{key:0,article:i.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),s[1]||(s[1]=F(`<p>在 AI 应用开发领域，检索增强生成（Retrieval Augmented Generation，RAG）已成为构建智能问答、文档分析等场景的核心技术。通过 RAG，AI 应用能够结合现有知识库，在生成回答时引入外部信息，从而为用户提供更准确、更智能的响应。本文将通过一个实践案例，展示如何使用 Dify、OceanBase 和 MCP，从零开始构建一个功能完备的 RAG 应用。</p><p><strong>Dify</strong> 是一个开源的 LLM 应用开发平台，它提供了友好的图形化界面，让开发者可以快速编排和部署 AI 应用和工作流。</p><p><strong>OceanBase</strong> 是由阿里巴巴和蚂蚁集团自主研发的分布式关系型数据库，专为大规模数据处理、高并发访问及金融级可用性场景而设计。它不仅支持传统的结构化数据管理与事务处理，从 4.3.3 版本开始，还原生支持向量数据类型，满足 AI 及语义检索等新兴应用需求。</p><p><strong>MCP（Model Context Protocol，模型上下文协议）</strong> 是由 Anthropic 公司于 2024 年 11 月推出并开源的开放协议，旨在实现大语言模型（LLM）与外部工具、数据源的高效交互。MCP 通过标准化的接口，让 AI 系统能够实时访问和调用数据库、API 及其他服务，从而打破“数据孤岛”，提升 AI 应用的实时性、可操作性和协作能力。</p><h2 id="部署-oceanbase" tabindex="-1">部署 OceanBase <a class="header-anchor" href="#部署-oceanbase" aria-label="Permalink to &quot;部署 OceanBase&quot;">​</a></h2><p>OceanBase 提供了多种<a href="https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000002012734" target="_blank" rel="noreferrer">部署方式</a>，例如通过 Docker、Kubernetes、OBD（OceanBase Deployer）和 OceanBase 桌面版等。为了方便实验，本文将使用 OceanBase 桌面版来部署 OceanBase。</p><blockquote><p>注意：OceanBase 桌面版仅适用于学习或测试场景，请不要应用于生产环境。</p></blockquote><p>安装 OceanBase 桌面版，可以参考该文档：<a href="https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000002866370" target="_blank" rel="noreferrer">https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000002866370</a></p><p>OceanBase 桌面版安装完成后，将看到如下界面：</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506272140339.png" alt=""></p><p>默认情况下，OceanBase 会创建两个租户 <code>sys</code> 和 <code>test</code>，我们将在 <code>test</code> 租户下创建 Dify 使用的向量数据库。第一次需要为 <code>test</code> 租户设置密码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506262327780.png" alt=""></p><p>在 <code>数据库管理</code> 页面中，新增一个名为 <code>rag</code> 的数据库。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506270955246.png" alt=""></p><h2 id="部署-dify" tabindex="-1">部署 Dify <a class="header-anchor" href="#部署-dify" aria-label="Permalink to &quot;部署 Dify&quot;">​</a></h2><p>在本文中，我们将使用 OceanBase 作为 Dify 的向量数据库，用于存储 RAG 应用所需的知识库内容。与此同时，Dify 还需要一个关系型数据库来存储元数据。目前 Dify 官方仓库（最新版为 v1.5.0）仅支持 PostgreSQL，尚不支持 MySQL。</p><p>OceanBase 社区基于 Dify v0.14.2 分支进行了改造，使其支持使用兼容 MySQL 协议的数据库来存储结构化数据，相关代码和文档在 <a href="https://gitee.com/oceanbase-devhub/dify" target="_blank" rel="noreferrer">oceanbase-devhub/dify</a> 仓库中。如果你希望同时使用 OceanBase 作为向量数据库和关系型数据库，可以参考该版本进行部署。</p><p>此前，OceanBase 社区也曾向 Dify 官方提交支持 MySQL 的 PR（Make Dify compatible with MySQL database：<a href="https://github.com/langgenius/dify/pull/8364" target="_blank" rel="noreferrer">https://github.com/langgenius/dify/pull/8364</a> ），但该 PR 未被 Dify 社区采纳。为了能够使用 Dify 的最新功能（例如 MCP Server 插件），本文将基于官方最新的 v1.5.0 版本，分别使用 OceanBase 和 PostgreSQL 作为向量数据库和关系型数据库。</p><p>启动 Dify 服务器最简单的方式是通过 Docker Compose。首先，克隆 Dify 仓库。进入 Dify 的 <code>docker</code> 目录，复制一份环境变量配置文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/langgenius/dify.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dify</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .env</span></span></code></pre></div><p>然后，编辑 <code>.env</code> 文件，将 <code>VECTOR_STORE</code> 设置为 <code>oceanbase</code>，并填入 OceanBase 的连接信息。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">VECTOR_STORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">oceanbase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OCEANBASE_VECTOR_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">198.19</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.249.160</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OCEANBASE_VECTOR_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2881</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OCEANBASE_VECTOR_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">root@test</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OCEANBASE_VECTOR_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">your_passwor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OCEANBASE_VECTOR_DATABASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">rag</span></span></code></pre></div><p>OceanBase 的 IP 地址可以在 OceanBase 桌面版部署所使用的虚拟机中获取。在 macOS 上，OceanBase 桌面版是通过 OrbStack 启动虚拟机进行部署的。你可以在 OrbStack 的 <code>Machines</code> 界面点击 <code>Terminal</code> 按钮进入对应虚拟机，并通过 <code>ip addr</code> 命令查看其 IP 地址。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506272242380.png" alt=""></p><p>在输出信息中找到 <code>eth0</code> 网卡的 <code>inet</code> 地址，例如 <code>198.19.249.160</code>，这就是连接 OceanBase 所需要用到的 IP。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">admin@oceanbase-desktop:~$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> addr</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> lo:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">LOOPBACK,UP,LOWER_U</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 65536</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> noqueue</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> UNKNOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    link/loopback</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:00:00:00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:00:00:00:00:00</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    inet</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 127.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.0.1/8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> host</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> lo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    inet6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ::1/128</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> host</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> proto</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kernel_lo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tunl0@NONE:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">NOAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1480</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> noop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    link/ipip</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">3:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sit0@NONE:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">NOAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1480</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> noop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    link/sit</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">4:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ip6tnl0@NONE:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">NOAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1452</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> noop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    link/tunnel6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ::</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> permaddr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a2c4:a96f:bb63::</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">5:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> eth0@if17:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1500</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> noqueue</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> UP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    link/ether</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a6:e9:47:13:6a:81</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ff:ff:ff:ff:ff:ff</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> link-netnsid</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    inet</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 198.19</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.249.160/24</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metric</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 198.19</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.249.255</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamic</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> eth0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       valid_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 168908</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sec</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preferred_lft</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 168908</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    inet6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fd07:b51a:cc66:0:a4e9:47ff:fe13:6a81/64</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mngtmpaddr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> noprefixroute</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    inet6</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fe80::a4e9:47ff:fe13:6a81/64</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> proto</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kernel_ll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> forever</span></span></code></pre></div><p>修改完环境变量配置后，执行以下命令启动 Dify 服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span></span></code></pre></div><blockquote><p>可选：Dify 的 <code>docker-compose.yaml</code> 文件中其实也包含了 OceanBase 的容器配置。但由于我们已经通过 OceanBase 桌面版完成了部署，因此可以选择将其中的 <a href="https://github.com/langgenius/dify/blob/1.5.0/docker/docker-compose.yaml#L950-L975" target="_blank" rel="noreferrer">OceanBase 容器配置</a>注释掉，避免启动一个多余的容器。</p></blockquote><p>服务启动后，浏览器输入 <code>http://localhost</code> 即可访问 Dify 的 Web 界面。第一次登录需要设置用户名和密码。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506262353541.png" alt=""></p><h2 id="设置模型供应商" tabindex="-1">设置模型供应商 <a class="header-anchor" href="#设置模型供应商" aria-label="Permalink to &quot;设置模型供应商&quot;">​</a></h2><p>点击右上角的头像，选择<code>设置</code>进入设置页面。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506272252841.png" alt=""></p><p>点击<code>模型供应商</code>，这里我选择将通义千问作为模型供应商。读者也可以自行选择其他模型供应商。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271010973.png" alt=""></p><p>在 <code>API Key</code> 中填入通义千问的 API Key，然后点击 <code>保存</code>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271011692.png" alt=""></p><p>选择默认的<code>系统模型</code>，这里主要需要设置<code>系统推理模型</code>和 <code>Embedding 模型</code>，大家可以根据自己的喜好自行选择。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271012508.png" alt=""></p><h2 id="索引知识库" tabindex="-1">索引知识库 <a class="header-anchor" href="#索引知识库" aria-label="Permalink to &quot;索引知识库&quot;">​</a></h2><p>完成模型设置后，接下来可以开始索引知识库了。回到首页，点击顶端的 <code>知识库</code> 标签页，进入知识库管理界面，点击<code>创建知识库</code>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506272258713.png" alt=""></p><p>选择<code>导入已有文本</code>，可以直接拖入文件进行索引。这里我上传了两篇关于大模型推理优化技术 Chunked Prefill 的论文。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271014757.png" alt=""></p><p>然后设置文本的分段规则，这里可以保留默认设置。点击<code>预览块</code>可以在右侧预览分段后的结果。确认没问题后，点击 <code>保存并处理</code>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271015078.png" alt=""></p><h2 id="创建对话应用" tabindex="-1">创建对话应用 <a class="header-anchor" href="#创建对话应用" aria-label="Permalink to &quot;创建对话应用&quot;">​</a></h2><p>点击<code>工作室</code>标签页，进入应用管理界面，点击<code>创建空白应用</code>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271017254.png" alt=""></p><p>选择<code>聊天助手</code>，并填写<code>应用名称</code>。输入完成后点击<code>创建</code>按钮。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271017269.png" alt=""></p><p>添加上一步索引的知识库作为聊天助手的上下文。然后可以在右侧聊天框里进行应用调试，例如询问<code>什么是 Chunked Prefill？</code>。从输出可以看到，AI 会根据文档内容生成回答，并附上引用的来源片段。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271019709.png" alt=""></p><p>点击文件图标，可以看到具体引用的内容。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271020639.png" alt=""></p><p>确认无误后，点击右上角的<code>发布</code>按钮。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271021003.png" alt=""></p><p>然后就可以在聊天助手中进行提问了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271022891.png" alt=""></p><h2 id="将-dify-应用转换为-mcp-server" tabindex="-1">将 Dify 应用转换为 MCP Server <a class="header-anchor" href="#将-dify-应用转换为-mcp-server" aria-label="Permalink to &quot;将 Dify 应用转换为 MCP Server&quot;">​</a></h2><p>Dify 也可以作为一个 MCP Server，使你构建的 AI 应用能够被其他 MCP 客户端（如 Cursor、Windsurf、Cherry Studio 等）调用，从而拓展更多使用场景。<a href="https://marketplace.dify.ai/plugins/hjlarry/mcp-server?language=en-US" target="_blank" rel="noreferrer">mcp-server</a> 插件由 Dify 社区贡献，是一种扩展类型插件。安装后，可将任意 Dify 应用转化为符合 MCP 标准的服务端点，供外部 MCP 客户端直接访问。</p><p>在 Dify 的 <code>Marketplace</code> 中选择 <code>MCP server</code> 插件进行安装。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271023065.png" alt=""></p><p>接下来，设置 MCP Server，<code>App</code> 选择上一步发布的聊天助手应用。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271038125.png" alt=""></p><p>按照 MCP 规范，我们需要为工具提供一个清晰的输入模式。对于聊天 Dify 应用，确保在输入模式中包含一个 <code>query</code> 字段，格式如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;search_paper&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Search information from Paper.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;inputSchema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">        &quot;properties&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">            &quot;query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">                &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;string&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">                &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;The keywords for search.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">        &quot;required&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            &quot;query&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>配置完 MCP Server 后，就可以得到一个 MCP Server 的端点，Dify 提供了 SSE 和 Streamable HTTP 两种端点，这里我们选择 <code>/mcp</code> 后缀的 Streamable HTTP 端点。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271039074.png" alt=""></p><p>将端点 URL 复制到 MCP Client，这里我使用 Cherry Studio。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271033132.png" alt=""></p><p>配置完成后，在聊天界面选择配置的 Dify MCP Server。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271033775.png" alt=""></p><p>接着我们尝试询问一个与知识库内容相关的问题。但调用 Dify MCP Server 后并没有得到预期的回答，展开返回结果可以看到仅返回了 <code>&lt;think&gt;</code>。这是因为我此前选择的推理模型 <code>qwen3-32b</code> 采用了混合思维模式，该模式允许 Qwen3 根据用户需求在“深度思考”和“快速响应”之间灵活切换。看起来是因为模型进入了深度思考模式，导致未能正常返回 Dify MCP Server 的调用结果。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271042505.png" alt=""></p><p>解决方法就是将推理模型切换为没有深度思考模式的模型，例如 <code>qwen-turbo</code>。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271041152.png" alt=""></p><p>现在再次询问一个与知识库内容相关的问题，就能从 Dify MCP Server 得到预期的回答了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202506271038821.png" alt=""></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本文详细介绍如何结合 Dify、OceanBase 和 MCP 从零开始构建一个功能完备的 RAG 应用。教程涵盖了从部署环境、创建知识库、到构建聊天助手并进行调试的全过程。最后，文章还演示了如何将 Dify 应用转化为一个标准的 MCP Server，使其能被外部客户端调用，从而极大地扩展了 AI 应用的集成与协作能力。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000002866370" target="_blank" rel="noreferrer">安装 OceanBase 桌面版</a></li><li><a href="https://stackoverflow.com/questions/78938322/mysql-authentication-plugin-issues-on-macos" target="_blank" rel="noreferrer">MySQL Authentication Plugin Issues on macOS</a></li><li><a href="https://dify.ai/blog/dify-mcp-plugin-hands-on-guide-integrating-zapier-for-effortless-agent-tool-calls" target="_blank" rel="noreferrer">Dify MCP Plugin Hands-On Guide: Integrating Zapier for Effortless Agent Tool Calls</a></li><li><a href="https://dify.ai/blog/turn-your-dify-app-into-an-mcp-server" target="_blank" rel="noreferrer">Turn Your Dify App into an MCP Server</a></li><li><a href="https://marketplace.dify.ai/plugins/hjlarry/mcp-server" target="_blank" rel="noreferrer">Dify MCP server</a></li></ul><h2 id="欢迎关注" tabindex="-1">欢迎关注 <a class="header-anchor" href="#欢迎关注" aria-label="Permalink to &quot;欢迎关注&quot;">​</a></h2><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202503222156941.png" alt=""></p>`,86))])}const P=k(C,[["render",u]]);export{v as __pageData,P as default};

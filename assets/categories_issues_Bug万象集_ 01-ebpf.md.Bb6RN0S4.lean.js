import{_ as p}from"./chunks/ArticleMetadata.CBANxfkh.js";import{_ as k,C as F,c as r,o as t,k as h,G as d,P as o,a as g,w as c,b as y,e as u}from"./chunks/framework.BhFhJsV2.js";import"./chunks/md5.Ek22RXBH.js";const x=JSON.parse('{"title":"eBPF","description":"","frontmatter":{"title":"eBPF","author":"Se7en","date":"2024/12/07 10:00","categories":["Bug万象集"],"tags":["eBPF"]},"headers":[],"relativePath":"categories/issues/Bug万象集/ 01-ebpf.md","filePath":"categories/issues/Bug万象集/ 01-ebpf.md","lastUpdated":1733584229000}'),D={name:"categories/issues/Bug万象集/ 01-ebpf.md"};function m(i,s,f,b,C,v){const e=p,l=F("ClientOnly");return t(),r("div",null,[s[0]||(s[0]=h("h1",{id:"ebpf",tabindex:"-1"},[g("eBPF "),h("a",{class:"header-anchor",href:"#ebpf","aria-label":'Permalink to "eBPF"'},"​")],-1)),d(l,null,{default:c(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(t(),y(e,{key:0,article:i.$frontmatter},null,8,["article"])):u("",!0)]}),_:1}),s[1]||(s[1]=o(`<h2 id="编译-ebpf-程序时报错-asm-types-h-file-not-found" tabindex="-1">编译 eBPF 程序时报错：&#39;asm/types.h&#39; file not found <a class="header-anchor" href="#编译-ebpf-程序时报错-asm-types-h-file-not-found" aria-label="Permalink to &quot;编译 eBPF 程序时报错：&#39;asm/types.h&#39; file not found&quot;">​</a></h2><p>编译 eBPF 程序时出现 <code>&#39;asm/types.h&#39; file not found</code> 报错：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@ebpf-demo:/media/psf/Code/hands-on-lab/ebpf/loadbalancer/sockops#</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">In</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> included</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /media/psf/Code/hands-on-lab/ebpf/loadbalancer/sockops/sockops.bpf.c:2:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">In</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> included</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/include/linux/bpf.h:11:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/usr/include/linux/types.h:5:10:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fatal</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;asm/types.h&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> found</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#include &lt;asm/types.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">         ^~~~~~~~~~~~~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generated.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> compile:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exit</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">exit</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">main.go:17:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;go&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exit</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span></span></code></pre></div><p>实际去 <code>/usr/include</code> 目录下看，发现没有 asm 这个目录，而有一个 asm-generic 目录。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/include/asm-generic/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">auxvec.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          fcntl.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           ioctls.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       msgbuf.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       sembuf.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       signal.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   swab.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      unistd.h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">bitsperlong.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     hugetlb_encode.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ipcbuf.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       param.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        setup.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        socket.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   termbits.h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">bpf_perf_event.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  int-l64.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         kvm_para.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     poll.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         shmbuf.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       sockios.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  termios.h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">errno-base.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      int-ll64.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        mman-common.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  posix_types.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  siginfo.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      stat.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     types.h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">errno.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           ioctl.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">           mman.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         resource.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     signal-defs.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  statfs.h</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ucontext.h</span></span></code></pre></div><p>手动创建软链接到 asm，重新编译即可。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/include/asm-generic/</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/include/asm</span></span></code></pre></div>`,7))])}const $=k(D,[["render",m]]);export{x as __pageData,$ as default};

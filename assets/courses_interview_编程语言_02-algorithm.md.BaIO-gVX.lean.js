import{_ as r,c as e,o as i,P as o}from"./chunks/framework.BhFhJsV2.js";const u=JSON.parse('{"title":"数据结构与算法","description":"","frontmatter":{"title":"数据结构与算法","author":"Se7en","categories":["Interview"],"tags":["Algorithm"]},"headers":[],"relativePath":"courses/interview/编程语言/02-algorithm.md","filePath":"courses/interview/编程语言/02-algorithm.md","lastUpdated":1726974458000}'),a={name:"courses/interview/编程语言/02-algorithm.md"};function s(l,t,n,g,c,p){return i(),e("div",null,t[0]||(t[0]=[o('<h2 id="为什么哈希表同时包含线性数据结构和非线性数据结构" tabindex="-1">为什么哈希表同时包含线性数据结构和非线性数据结构？ <a class="header-anchor" href="#为什么哈希表同时包含线性数据结构和非线性数据结构" aria-label="Permalink to &quot;为什么哈希表同时包含线性数据结构和非线性数据结构？&quot;">​</a></h2><p>哈希表底层是数组，而为了解决哈希冲突，我们可能会使用“链式地址”：数组中每个桶指向一个链表，当链表长度超过一定阈值时，又可能被转化为树（通常为红黑树）。</p><p>从存储的角度来看，哈希表的底层是数组，其中每一个桶槽位可能包含一个值，也可能包含一个链表或一棵树。因此，哈希表可能同时包含线性数据结构（数组、链表）和非线性数据结构（树）。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202409220920926.png" alt=""></p><h2 id="链表典型应用" tabindex="-1">链表典型应用 <a class="header-anchor" href="#链表典型应用" aria-label="Permalink to &quot;链表典型应用&quot;">​</a></h2><p>单向链表通常用于实现栈、队列、哈希表和图等数据结构。</p><ul><li><strong>栈与队列</strong>：当插入和删除操作都在链表的一端进行时，它表现的特性为先进后出，对应栈；当插入操作在链表的一端进行，删除操作在链表的另一端进行，它表现的特性为先进先出，对应队列。</li><li><strong>哈希表</strong>：链式地址是解决哈希冲突的主流方案之一，在该方案中，所有冲突的元素都会被放到一个链表中。</li><li><strong>图</strong>：邻接表是表示图的一种常用方式，其中图的每个顶点都与一个链表相关联，链表中的每个元素都代表与该顶点相连的其他顶点。</li></ul><p>双向链表常用于需要快速查找前一个和后一个元素的场景。</p><ul><li><strong>高级数据结构</strong>：比如在红黑树、B 树中，我们需要访问节点的父节点，这可以通过在节点中保存一个指向父节点的引用来实现，类似于双向链表。</li><li><strong>浏览器历史</strong>：在网页浏览器中，当用户点击前进或后退按钮时，浏览器需要知道用户访问过的前一个和后一个网页。双向链表的特性使得这种操作变得简单。</li><li><strong>LRU 算法</strong>：在缓存淘汰（LRU）算法中，我们需要快速找到最近最少使用的数据，以及支持快速添加和删除节点。这时候使用双向链表就非常合适。</li></ul><p>环形链表常用于需要周期性操作的场景，比如操作系统的资源调度。</p><ul><li><strong>时间片轮转调度算法</strong>：在操作系统中，时间片轮转调度算法是一种常见的 CPU 调度算法，它需要对一组进程进行循环。每个进程被赋予一个时间片，当时间片用完时，CPU 将切换到下一个进程。这种循环操作可以通过环形链表来实现。</li><li><strong>数据缓冲区</strong>：在某些数据缓冲区的实现中，也可能会使用环形链表。比如在音频、视频播放器中，数据流可能会被分成多个缓冲块并放入一个环形链表，以便实现无缝播放。</li></ul>',11)]))}const d=r(a,[["render",s]]);export{u as __pageData,d as default};

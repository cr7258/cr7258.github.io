import{_ as l}from"./chunks/ArticleMetadata.Et6qEObI.js";import{_ as k,C as r,c as o,o as t,k as n,G as d,P as g,a as c,w as F,b as y,e as C}from"./chunks/framework.BhFhJsV2.js";import"./chunks/md5.Ek22RXBH.js";const E=JSON.parse('{"title":"如何往 Kafka 发送大消息？","description":"","frontmatter":{"title":"如何往 Kafka 发送大消息？","author":"Se7en","date":"2022/05/04 20:00","categories":["原创"],"tags":["Kafka"]},"headers":[],"relativePath":"blogs/original/2022/07-kafka-big-message.md","filePath":"blogs/original/2022/07-kafka-big-message.md","lastUpdated":1707227798000}'),m={name:"blogs/original/2022/07-kafka-big-message.md"};function u(i,s,b,D,f,A){const h=l,p=r("ClientOnly");return t(),o("div",null,[s[0]||(s[0]=n("h1",{id:"如何往-kafka-发送大消息",tabindex:"-1"},[c("如何往 Kafka 发送大消息？ "),n("a",{class:"header-anchor",href:"#如何往-kafka-发送大消息","aria-label":'Permalink to "如何往 Kafka 发送大消息？"'},"​")],-1)),d(p,null,{default:F(()=>{var a,e;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((e=i.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(t(),y(h,{key:0,article:i.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),s[1]||(s[1]=g(`<p>默认情况下，Kafka topic 中每条消息的默认限制为 1MB。这是因为在 Kafka 中，非常大的消息被认为是低效和反模式的。然而，有时候你可能需要往 Kafka 中发送大消息。在本文中我们将研究在 Kafka 中处理大消息的两种方法。</p><h2 id="选项-1-使用外部存储" tabindex="-1">选项 1：使用外部存储 <a class="header-anchor" href="#选项-1-使用外部存储" aria-label="Permalink to &quot;选项 1：使用外部存储&quot;">​</a></h2><p>将大消息（例如视频文件）发送到外部存储，在 Kafka 中只保存这些文件的引用，例如文件的 URL。外部存储可以是云存储（例如 Amazon S3），也可以是网络存储（NAS）或者 HDFS 等本地大型文件存储系统。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220617214405.png" alt=""></p><h2 id="选项-2-修改-kafka-消息大小限制-适用于大于-1mb-小于-10-mb-的消息" tabindex="-1">选项 2：修改 Kafka 消息大小限制（适用于大于 1MB 小于 10 MB 的消息） <a class="header-anchor" href="#选项-2-修改-kafka-消息大小限制-适用于大于-1mb-小于-10-mb-的消息" aria-label="Permalink to &quot;选项 2：修改 Kafka 消息大小限制（适用于大于 1MB 小于 10 MB 的消息）&quot;">​</a></h2><p>这里我们需要修改 broker, consumer, producer 3 个部分的配置，以允许处理更大的消息。</p><h3 id="broker-服务端" tabindex="-1">Broker 服务端 <a class="header-anchor" href="#broker-服务端" aria-label="Permalink to &quot;Broker  服务端&quot;">​</a></h3><p>在 broker 端有两种修改最大消息大小的方式：</p><ul><li><ol><li><code>message.max.bytes</code> 静态参数在 broker 级别生效，影响所有的 topic，需要修改 server.properties 文件，并重启 Kafka 集群。</li></ol></li><li><ol start="2"><li><code>max.message.bytes</code> 动态参数在 topic 级别生效，只影响指定的 topic，修改后立即生效，无需重启 Kafka 集群。</li></ol></li></ul><p>建议保留 broker 级别最大消息大小的默认值（1MB），仅在 topic 级别覆盖此设置。</p><p>可以在创建 topic 的时候指定动态配置参数，例如创建一个名叫 <code>large-message</code> 的 topic，指定 <code>max.message.bytes</code> 为 10MB。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-topics.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--create </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">--topic</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--config </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">max.message.bytes=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10485880</span></span></code></pre></div><p>也可以在已创建的 topic 上修改该配置参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-configs.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                --alter</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --entity-type</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> topics</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                --entity-name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                --add-config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> max.message.bytes=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10485880</span></span></code></pre></div><p>查看 <code>large-message</code> topic 的动态配置参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-configs.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">--entity-type</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> topics</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --entity-name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --describe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 返回结果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Dynamic</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> configs</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> topic</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> are:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># DYNAMIC_TOPIC_CONFIG 是此时生效的配置 10MB，DEFAULT_CONFIG 是默认配置 1M。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  max.message.bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=10485880 </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">sensitive=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> synonyms={DYNAMIC_TOPIC_CONFIG:max.message.bytes=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10485880</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEFAULT_CONFIG:message.max.bytes=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1048588</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span></span></code></pre></div><p>现在我们已经修改了 topic 的最大消息大小，但这还不够，<strong>我们还需要设置 <code>replica.fetch.max.bytes=10485880</code>（默认也是 1MB），以便大消息可以正常复制到 broker 的副本中。</strong> 该参数是静态配置，只能在 <code>server.properties</code> 配置文件中修改，并且需要重启 Kafka 集群才能生效。</p><p>如果没有修改 <code>replica.fetch.max.bytes</code> 参数，当往 leader replica 写入大消息时，follower replica 会因为无法复制该消息产生如下报错。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2022</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-06-17 </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">09</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:15:08,717] ERROR [ReplicaManager broker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] Error processing fetch with max size 1048576 from replica [</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] on partition large-message-0: PartitionData(fetchOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">410683670</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> logStartOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">395947464</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> maxBytes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1048576</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> currentLeaderEpoch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Optional[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> lastFetchedEpoch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Optional.empty</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka.server.ReplicaManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">org.apache.kafka.common.errors.CorruptRecordException:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Found</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> record</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> size</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> smaller</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> than</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minimum</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> record</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> overhead</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (14) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> file /data/large-message-0/00000000000410481778.log.</span></span></code></pre></div><h3 id="consumer-消费者" tabindex="-1">Consumer 消费者 <a class="header-anchor" href="#consumer-消费者" aria-label="Permalink to &quot;Consumer 消费者&quot;">​</a></h3><p>在 consumer 端需要修改 <code>max.partition.fetch.bytes</code> 参数的值，以便可以消费大消息，需要确保该值<strong>大于等于</strong> broker 上配置的 <code>message.max.bytes</code>，否则一旦消息大于<code>max.partition.fetch.bytes</code> 的值，消费者将无法拉取到这条消息，从而导致消费进度卡住。</p><p>在 CLI 中可以使用可以使用 <code>--consumer-property</code> 参数进行设置。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-console-consumer.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    --from-beginning</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    --consumer-property</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> max.partition.fetch.bytes=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10485880</span></span></code></pre></div><p>在 Java 代码中可以这样设置。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">properties.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ConsumerConfig.FETCH_MAX_BYTES_CONFIG, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;10485880&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>如果你使用 Logstash 作为消费者，可以这样设置。需要注意的是，在 Logstash 中 <code>max_partition_fetch_bytes</code> 参数的类型在不同的版本中是不一样的，例如在 7.7 版本中是 STRING 类型，而在 7.8 版本开始变为 NUMBER 类型。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">input</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       bootstrap_servers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;localhost:9092&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       topics</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;large-message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">       max_partition_fetch_bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;10485880&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 设置最大消费消息大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="producer-生产者" tabindex="-1">Producer 生产者 <a class="header-anchor" href="#producer-生产者" aria-label="Permalink to &quot;Producer 生产者&quot;">​</a></h3><p>在 producer 端需要修改 <code>max.request.size</code> 参数的值，以便可以发送大消息，要确保该值<strong>小于等于</strong> broker 上配置的 <code>message.max.bytes</code>。</p><p>在 CLI 中可以使用可以使用 <code>--consumer-property</code> 参数进行设置。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kafka-console-producer.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    --producer-property</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> max.request.size=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10485880</span></span></code></pre></div><p>在 Java 代码中可以这样设置。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">properties.setProperty(ProducerConfig.MAX_REQUEST_SIZE_CONFIG,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;10485880&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>如果使用 Filebeat 作为生产者，可以这样设置。大于 <code>max_message_bytes</code> 的消息将会被丢弃，不会发送给 Kafka。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">output:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  kafka:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    hosts:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;localhost:9092&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    topic:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large-message</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    max_message_bytes:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10485880</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 设置最大生产消息大小</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li>[1] How to send Large Messages in Apache Kafka: <a href="https://www.conduktor.io/kafka/how-to-send-large-messages-in-apache-kafka" target="_blank" rel="noreferrer">https://www.conduktor.io/kafka/how-to-send-large-messages-in-apache-kafka</a></li><li>[2] Kafka input plugin: <a href="https://www.elastic.co/guide/en/logstash/7.7/plugins-inputs-kafka.html#plugins-inputs-kafka-%60max_partition_fetch_bytes" target="_blank" rel="noreferrer">https://www.elastic.co/guide/en/logstash/7.7/plugins-inputs-kafka.html#plugins-inputs-kafka-\`max_partition_fetch_bytes</a></li></ul><h2 id="欢迎关注" tabindex="-1">欢迎关注 <a class="header-anchor" href="#欢迎关注" aria-label="Permalink to &quot;欢迎关注&quot;">​</a></h2><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20220104221116.png" alt=""></p>`,39))])}const x=k(m,[["render",u]]);export{E as __pageData,x as default};

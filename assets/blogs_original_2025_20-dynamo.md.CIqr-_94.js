import{_ as p}from"./chunks/ArticleMetadata.B38I6HZO.js";import{_ as e,C as F,c as r,o as h,k,G as d,P as g,a as y,w as D,b as o,e as c}from"./chunks/framework.DIkCQIk8.js";import"./chunks/md5.BFEskVOY.js";const f=JSON.parse('{"title":"使用 NVIDIA Dynamo 部署 P/D 分离推理服务","description":"","frontmatter":{"title":"使用 NVIDIA Dynamo 部署 P/D 分离推理服务","author":"Se7en","date":"2025/08/30 12:00","categories":["AI"],"tags":["AI","Inference"]},"headers":[],"relativePath":"blogs/original/2025/20-dynamo.md","filePath":"blogs/original/2025/20-dynamo.md","lastUpdated":1757289998000}'),C={name:"blogs/original/2025/20-dynamo.md"};function u(i,s,m,A,_,B){const l=p,t=F("ClientOnly");return h(),r("div",null,[s[0]||(s[0]=k("h1",{id:"使用-nvidia-dynamo-部署-p-d-分离推理服务",tabindex:"-1"},[y("使用 NVIDIA Dynamo 部署 P/D 分离推理服务 "),k("a",{class:"header-anchor",href:"#使用-nvidia-dynamo-部署-p-d-分离推理服务","aria-label":'Permalink to "使用 NVIDIA Dynamo 部署 P/D 分离推理服务"'},"​")],-1)),d(t,null,{default:D(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),o(l,{key:0,article:i.$frontmatter},null,8,["article"])):c("",!0)]}),_:1}),s[1]||(s[1]=g(`<h2 id="_1-dynamo-介绍" tabindex="-1">1 Dynamo 介绍 <a class="header-anchor" href="#_1-dynamo-介绍" aria-label="Permalink to &quot;1 Dynamo 介绍&quot;">​</a></h2><p>NVIDIA Dynamo 是一个开源的模块化推理框架，用于在分布式环境上实现生成式 AI 模型的服务化部署。它能够通过动态资源调度、智能请求路由、优化的内存管理和加速的数据传输，无缝扩展大型 GPU 集群之间的推理工作负载。</p><p>Dynamo 采用推理引擎无关的设计（支持 TensorRT-LLM、vLLM、SGLang 等），包括以下 4 个核心组件：</p><ul><li><strong>NVIDIA Dynamo Planner</strong>：一个智能规划和调度引擎，用于监控分布式推理中的容量与延迟，并在 prefill 与 decode 阶段之间灵活分配 GPU 资源，以最大化吞吐量和效率。Planner 会持续跟踪关键的 GPU 容量指标，并结合应用的 SLO（如 TTFT 和 ITL），智能决策是否采用分离式推理，或是否需要为某一阶段动态增加更多 GPU。</li><li><strong>NVIDIA Dynamo Smart Router</strong>：KV cache 感知的路由引擎，可在分布式推理环境中将请求转发到最佳的节点，从而最大限度减少 KV cache 的重复计算开销。</li><li><strong>NVIDIA Dynamo Distributed KV Cache Manager</strong>：通过将较旧或低频访问的 KV cache 卸载到更低成本的存储（如 CPU 内存、本地存储或对象存储等），大幅降低 GPU 内存占用。借助这种分层管理，开发者既能保留大规模 KV cache 重用的优势，又能释放宝贵的 GPU 资源，从而有效降低推理计算成本。</li><li><strong>NVIDIA Inference Transfer Library (NIXL)</strong>：高效的推理数据传输库，可加速 GPU 之间以及异构内存与存储之间的 KV cache 传输。通过减少同步开销和智能批处理，NIXL 显著降低了分布式推理中的通信延迟，使得在 prefill / decode 分离部署时，prefill 节点也能在毫秒级将大批量 KV cache 推送至 decode 节点，从而避免跨节点数据交换成为性能瓶颈。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20250905101610730.png" alt=""></p><p>在这篇文章中，我们将介绍如何安装和运行 Dynamo，包括快速开始、PD 分离部署，以及在 Kubernetes 环境中的实践。快速开始示例只需 1 个 GPU，而 PD 分离部署示例则需要 2 个 GPU。</p><h2 id="_2-安装依赖" tabindex="-1">2 安装依赖 <a class="header-anchor" href="#_2-安装依赖" aria-label="Permalink to &quot;2 安装依赖&quot;">​</a></h2><p>在启动 Dynamo 之前，需要确保系统已经安装了 Docker、NVIDIA GPU Driver、CUDA Toolkit、NVIDIA Container Toolkit 等依赖。以下安装步骤基于 Ubuntu 操作系统，其他 Linux 发行版请参考相应的官方文档。</p><h3 id="_2-1-安装-docker" tabindex="-1">2.1 安装 <a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noreferrer">Docker</a> <a class="header-anchor" href="#_2-1-安装-docker" aria-label="Permalink to &quot;2.1 安装 [Docker](https://docs.docker.com/engine/install/ubuntu/)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Add Docker&#39;s official GPG key:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca-certificates</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0755</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/apt/keyrings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://download.docker.com/linux/ubuntu/gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/apt/keyrings/docker.asc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a+r</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/apt/keyrings/docker.asc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Add the repository to Apt sources:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;deb [arch=$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --print-architecture</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/os-release &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">UBUNTU_CODENAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$VERSION_CODENAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;) stable&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/apt/sources.list.d/docker.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /dev/null</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> containerd.io</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-buildx-plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-compose-plugin</span></span></code></pre></div><h3 id="_2-2-安装-nvidia-gpu-driver-和-cuda-toolkit" tabindex="-1">2.2 安装 NVIDIA GPU Driver 和 CUDA Toolkit <a class="header-anchor" href="#_2-2-安装-nvidia-gpu-driver-和-cuda-toolkit" aria-label="Permalink to &quot;2.2 安装 NVIDIA GPU Driver 和 CUDA Toolkit&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://developer.download.nvidia.com/compute/cuda/12.6.2/local_installers/cuda_12.6.2_560.35.03_linux.run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cuda_12.6.2_560.35.03_linux.run</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --silent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;"> EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">export PATH=/usr/local/cuda-12.6/bin:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">PATH</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">export LD_LIBRARY_PATH=/usr/local/cuda-12.6/lib64:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">LD_LIBRARY_PATH</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/.bashrc</span></span></code></pre></div><h3 id="_2-3-安装-nvidia-container-toolkit" tabindex="-1">2.3 安装 <a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html" target="_blank" rel="noreferrer">NVIDIA Container Toolkit</a>： <a class="header-anchor" href="#_2-3-安装-nvidia-container-toolkit" aria-label="Permalink to &quot;2.3 安装 [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html)：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://nvidia.github.io/libnvidia-container/gpgkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --dearmor</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    sed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/apt/sources.list.d/nvidia-container-toolkit.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/experimental/ s/^#//g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/apt/sources.list.d/nvidia-container-toolkit.list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> NVIDIA_CONTAINER_TOOLKIT_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.8-1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      nvidia-container-toolkit=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${NVIDIA_CONTAINER_TOOLKIT_VERSION} </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      nvidia-container-toolkit-base=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${NVIDIA_CONTAINER_TOOLKIT_VERSION} </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      libnvidia-container-tools=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${NVIDIA_CONTAINER_TOOLKIT_VERSION} </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      libnvidia-container1=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${NVIDIA_CONTAINER_TOOLKIT_VERSION}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nvidia-ctk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> runtime</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --runtime=docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span></span></code></pre></div><h3 id="_2-4-安装-python-依赖" tabindex="-1">2.4 安装 Python 依赖 <a class="header-anchor" href="#_2-4-安装-python-依赖" aria-label="Permalink to &quot;2.4 安装 Python 依赖&quot;">​</a></h3><p>Dynamo 推荐使用 uv 作为 Python 包管理器，执行以下命令安装 uv：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -LsSf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://astral.sh/uv/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/.local/bin/env</span></span></code></pre></div><p>安装 Python 开发工具和编译工具：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python3.12-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build-essential</span></span></code></pre></div><h2 id="_3-运行-dynamo" tabindex="-1">3 运行 Dynamo <a class="header-anchor" href="#_3-运行-dynamo" aria-label="Permalink to &quot;3 运行 Dynamo&quot;">​</a></h2><h3 id="_3-1-快速开始" tabindex="-1">3.1 快速开始 <a class="header-anchor" href="#_3-1-快速开始" aria-label="Permalink to &quot;3.1 快速开始&quot;">​</a></h3><p>首先克隆仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/ai-dynamo/dynamo.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo</span></span></code></pre></div><p>在 Dynamo 框架中，跨节点通信使用的是 NIXL。NIXL 启动时会向 etcd 注册以实现节点间的自动发现，而 NATS 服务则主要用于 prefill 与 decode worker 之间的消息传递。因此，在部署推理服务之前，需要先完成 etcd 和 NATS 的部署。执行以下命令，通过 docker-compose 启动 etcd 和 NATS 服务：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> deploy/docker-compose.yml</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span></span></code></pre></div><p>Dynamo 为每个支持的引擎（TensorRT-LLM、vLLM、SGLang 等）单独发布了对应的 Python wheel。这里以 vLLM 为例，执行以下命令安装依赖：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 创建 Python 虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> venv</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> venv/bin/activate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 安装 Dynamo vLLM</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;ai-dynamo[vllm]&quot;</span></span></code></pre></div><p>执行以下命令启动 Dynamo 的 vLLM worker，使用 <code>Qwen/Qwen3-0.6B</code> 模型进行推理：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo.vllm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Qwen/Qwen3-0.6B</span></span></code></pre></div><p>然后启动 Dynamo 的 frontend，一个用 Rust 编写的高性能 OpenAI 兼容 HTTP API 服务：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo.frontend</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --http-port</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span></span></code></pre></div><p>接下来，你可以使用 curl 命令发送请求，或通过任意兼容 OpenAI 的客户端程序或库进行调用。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://localhost:8000/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;model&quot;: &quot;Qwen/Qwen3-0.6B&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story about a brave cat&quot; }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;stream&quot;: false,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_tokens&quot;: 1028</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  }&#39;</span></span></code></pre></div><p>在幕后，当你向 frontend 发送一个 HTTP 请求时，会经历以下过程：</p><ul><li>请求封装：frontend 会将你的 HTTP 请求封装为带有路由元数据的标准化内部格式。</li><li>NATS Subject 解析：frontend 使用在 etcd 中发现的服务信息，解析出合适的 NATS 端点。</li><li>消息分发：请求被发布到对应的 NATS subject，并由目标 vLLM backend 接收。</li><li>响应流式传输：vLLM backend 执行请求，并通过 NATS 将响应以流的形式返回，frontend 再将其转换回标准的 HTTP 响应。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20250905110114529.png" alt=""></p><h3 id="_3-2-pd-分离-prefill-decode-disaggregation" tabindex="-1">3.2 PD 分离（Prefill-Decode Disaggregation） <a class="header-anchor" href="#_3-2-pd-分离-prefill-decode-disaggregation" aria-label="Permalink to &quot;3.2 PD 分离（Prefill-Decode Disaggregation）&quot;">​</a></h3><p>LLM 请求的 prefill 阶段和 decode 阶段在计算特性和内存占用上有显著差异。将这两个阶段拆分到专门的 LLM 引擎中，可以实现更合理的硬件资源分配、更好的可扩展性以及整体性能提升。比如，在内存受限的 decode 阶段使用更大的 TP（tensor parallelism），而在计算密集的 prefill 阶段使用较小的 TP，就能让两个阶段都高效执行。此外，对于长上下文请求，将其 prefill 阶段交给专门的 prefill 引擎，可以避免正在进行的 decode 请求被这些长 prefill 阻塞，从而保持系统的高效处理。</p><p>一个请求的分离式执行主要包括三个步骤：</p><ul><li>prefill 引擎计算 prefill 阶段并生成 KV cache；</li><li>prefill 引擎将 KV cache 传输给 decode 引擎；</li><li>decode 引擎计算 decode 阶段。</li></ul><p>不过，并非所有请求的 prefill 阶段都需要在远程 prefill 引擎上执行。**如果 prefill 较短，或者 decode 引擎有较高的 prefix cache 命中率，那么直接在 decode 引擎上本地计算 prefill 往往更高效。**Dynamo 的分离式设计考虑了这些不同场景，提供了一个灵活的框架，能够在各种条件下都实现出色的性能表现。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20250905110939639.png" alt=""></p><p>在 Dynamo 的 PD 分离架构中，有 4 个核心组件：</p><ul><li>Worker：执行 prefill 和 decode 请求。</li><li>Prefill worker：只执行 prefill 请求。</li><li>Disaggregated router：决定 prefill 阶段是在本地还是远程执行。</li><li>Prefill queue：缓存并负载均衡远程 prefill 请求。</li></ul><p>当 worker 收到请求时，首先会通过 disaggregated router 判断 prefill 应该在本地还是远程完成，并分配相应的 KV block。 如果选择远程 prefill，请求会被推送到 prefill queue。随后，prefill worker 从队列中取出请求，读取 worker 中 prefix cache 命中的 KV block，执行 prefill 计算，并将生成的 KV block 回写给 worker。最后，worker 会继续完成剩余的 decode 阶段。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/20250905210843098.png" alt=""></p><p>接下来将演示如何通过 Dynamo 实现 PD 分离部署。首先打开一个新的终端并启动 decode worker 进程，将日志级别设置为 debug，以便我们进行观察。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DYN_LOG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">debug</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # Increase log verbosity to see disaggregation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">CUDA_VISIBLE_DEVICES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo.vllm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Qwen/Qwen3-0.6B</span></span></code></pre></div><p>打开另一个终端并启动 prefill worker 进程：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DYN_LOG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">debug</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # Increase log verbosity to see disaggregation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">CUDA_VISIBLE_DEVICES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo.vllm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Qwen/Qwen3-0.6B</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --is-prefill-worker</span></span></code></pre></div><p>打开第 3 个终端启动 frontend：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo.frontend</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --http-port</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span></span></code></pre></div><p>客户端发送推理请求：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://localhost:8000/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;model&quot;: &quot;Qwen/Qwen3-0.6B&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story about a cowardly cat&quot; }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;stream&quot;: false,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_tokens&quot;: 1028</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  }&#39;</span></span></code></pre></div><p>decode worker 从接收请求到完成处理的完整日志如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:21.915276Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers._prefill_check_loop:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Current</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Prefill</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Workers:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:26.920611Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers._prefill_check_loop:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Current</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Prefill</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Workers:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.017808Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> _core::engine:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> starting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> process</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> async</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_id=&quot;02bfc326-5c79-40dc-bcf3-8f30251778ed&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.018227Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers.generate:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> New</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.018986Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo_runtime::pipeline::network::tcp::server:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Registering</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> TcpStream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10.63</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.146.171:44637</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.076786Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> loop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> active.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.076928Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_computed_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.077013Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_external_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.077308Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.start_load_kv:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start_load_kv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> engine</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f1cba5c-3231-4b30-9ea3-b393f5311e53.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Num</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> local_block_ids:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Num</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote_block_ids:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.078061Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._nixl_handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Querying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metadata</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> path:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tcp://127.0.1.1:20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.078361Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.078521Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.100638Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._nixl_handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metadata</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> took:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.022726254001099733</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.661659Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.661936Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.665140Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.add_remote_agent:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Created</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 377496</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> blocks</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dst</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> engine</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f1cba5c-3231-4b30-9ea3-b393f5311e53</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.708358Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.708693Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.754379Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._nixl_handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> agent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> took:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.6485800469999958</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.754653Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.760328Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.760571Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._read_blocks_for_req:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f1cba5c-3231-4b30-9ea3-b393f5311e53</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> available,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> calling</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> _read_blocks</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.761955Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.762335Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.763002Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.get_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get_finished:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> done</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sending</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> done</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> recving</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.763202Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler._update_from_kv_xfer_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Finished</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> recving</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> KV</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.763555Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_external_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:31.921907Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers._prefill_check_loop:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Current</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Prefill</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Workers:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:36.773065Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.request_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_finished,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_status=FINISHED_STOPPED,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:36.773456Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> work.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:36.775360Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> _core::engine:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> finished</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> processing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> async</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_id=&quot;02bfc326-5c79-40dc-bcf3-8f30251778ed&quot;</span></span></code></pre></div><p>prefill worker 从接收请求到完成处理的完整日志如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.021115Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> _core::engine:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> starting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> process</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> async</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_id=&quot;3536cede-1ea7-4868-936b-8e6bc58748b1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.021290Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers.generate:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> New</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Prefill</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.023433Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> loop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> active.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.023733Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_computed_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.023825Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_external_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.069724Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.request_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_finished,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_status=FINISHED_LENGTH_CAPPED,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.070486Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> work.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.071135Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers.generate:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> params:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.071797Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> _core::engine:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> finished</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> processing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> async</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> generator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_id=&quot;3536cede-1ea7-4868-936b-8e6bc58748b1&quot;</span></span></code></pre></div><p>接下来，我们通过日志输出来详细解析 PD 分离架构处理请求的过程：</p><p><strong>1.请求接收阶段</strong></p><p>请求首先由 decode worker 接收并分配 Request ID，此时 disaggregated router 判定 prefill 阶段需要远程执行，请求会被推入 prefill queue，由 prefill worker 拉取后开始处理。日志中 prefill worker 打印的 Request ID 与 decode worker 保持一致，但时间戳会略晚于 decode worker。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.018227Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers.generate:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> New</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># prefill worker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.021290Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers.generate:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> New</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Prefill</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Request</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ID:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span></span></code></pre></div><p><strong>2.prefill worker 处理请求</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># prefill worker 日志</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 以下代码注释来自 vLLM v0.10.1.1 和 Dynamo 0.4.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vLLM engine 变为活跃状态，开始处理请求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/v1/engine/core.py: 753 行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.023433Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> loop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> active.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 276 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 在 prefill worker 的日志中，num_computed_tokens=0 表明这个请求还没有计算过任何 token，需要从头开始进行 prefill 计算</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># kv_transfer_params={&#39;do_remote_decode&#39;: True} 是从 decode worker 接收到的 KV transfer 参数，表明请求来自远程 decode worker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.023733Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_computed_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 295 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 在分配完 block 后调用，当 NIXL 不直接支持该 Accelerator 时（kv_buffer_device == &quot;cpu&quot;），prefill 计算的 block 需要在 KV transfer 之前先存储到 host memory </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># num_external_tokens=0 表明没有外部 token 需要加载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.023825Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_external_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 383 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 由于 prefill worker 的 max_tokens=1，当生成一个 token 后就达到长度限制，状态被设置为 FINISHED_LENGTH_CAPPED</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 当请求处理完成后，scheduler 会调用 request_finished() 方法，由于 do_remote_decode=True 且状态为 FINISHED_LENGTH_CAPPED，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 决定延迟释放 KV block，等待 decode worker 后续通过 NIXL 连接异步拉取 KV cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.069724Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.request_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_finished,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_status=FINISHED_LENGTH_CAPPED,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/v1/engine/core.py: 747 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vLLM engine 回到空闲状态，等待新的请求</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.070486Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> work.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># dynamo: components/backends/vllm/src/dynamo/vllm/handlers.py: 184 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># prefill worker 返回给 decode worker 的 KV transfer 参数，告诉 decode 去哪里拉取已经计算好的 prefill 阶段的 KV cache，以便继续生成 decode 阶段的 token</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.071135Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handlers.generate:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> params:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span></span></code></pre></div><p><strong>3.decode worker 处理请求</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 日志</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 以下代码注释来自 vLLM v0.10.1.1 和 Dynamo 0.4.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vLLM engine 变为活跃状态，开始处理请求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/v1/engine/core.py: 753 行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.076786Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> loop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> active.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 276 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 在 decode worker 中，num_computed_tokens=0 表明 decode worker 尚未对这个请求进行任何计算</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 由于 KV transfer 参数中 do_remote_prefill=True，decode worker 会计算出可以从外部 KV cache 加载的 token 数量（len(request.prompt_token_ids) - num_computed_tokens）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 并将从 prefill worker 的 remote_block_ids=[1,2] 拉取对应的 KV cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.076928Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get_num_new_matched_tokens:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_computed_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 295 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># num_external_tokens=17 表明 decode worker 已为 17 个外部 token 分配了 KV cache 内存空间，并将该请求注册到 _reqs_need_recv 队列中，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 等待后续调度循环中通过异步拉取 remote_block_ids=[1,2] 对应的 KV cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.077013Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_external_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> True,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 1118 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 开始从 prefill worker 拉取对应的 KV cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.077308Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.start_load_kv:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start_load_kv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> engine</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f1cba5c-3231-4b30-9ea3-b393f5311e53.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Num</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> local_block_ids:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Num</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote_block_ids:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 607 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 查询连接元数据，开始与 prefill worker 建立 NIXL 连接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.078061Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._nixl_handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Querying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metadata</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> path:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tcp://127.0.1.1:20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/v1/core/sched/scheduler.py: 347 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 等待 KV cache 传输完成，scheduler 会持续检查 KV cache 传输状态，直到完成后才会调度该请求继续执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.078361Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.078521Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 617 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># NIXL 握手过程中，获取元数据耗时约 22.7 毫秒</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.100638Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._nixl_handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> metadata</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> took:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.022726254001099733</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 等待 KV cache 传输完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.661659Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.661936Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 978 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 添加远程 NIXL agent 并准备用于从远程读取 KV cache block 的描述符</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.665140Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.add_remote_agent:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Created</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 377496</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> blocks</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dst</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> engine</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f1cba5c-3231-4b30-9ea3-b393f5311e53</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 等待 KV cache 传输完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.708358Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.708693Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 630 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 添加远程 NIXL agent 耗时约 648 毫秒</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.754379Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._nixl_handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> handshake:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> agent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> took:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.6485800469999958</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 等待 KV cache 传输完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.754653Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.760328Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 1144 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 远程 NIXL agent 已准备就绪，开始调用 _read_blocks() 方法从远程读取 KV cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.760571Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector._read_blocks_for_req:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Remote</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">f1cba5c-3231-4b30-9ea3-b393f5311e53</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> available,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> calling</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> _read_blocks</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 等待 KV cache 传输完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.761955Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.762335Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler.schedule:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> still</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> WAITING_FOR_REMOTE_KVS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> state.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 1030 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 检查 KV cache 传输完成状态，发现 1 个请求的 KV cache 接收已完成</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 这个状态信息通过 _update_from_kv_xfer_finished() 返回给 scheduler，scheduler 将在下次调度循环中通过 _update_waiting_for_remote_kv() 将相应请求从 WAITING_FOR_REMOTE_KVS 状态转为 WAITING 可调度状态 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.763002Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.get_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Rank</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get_finished:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> done</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sending</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> done</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> recving</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/v1/core/sched/scheduler.py: 1263 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># scheduler 确认 KV cache 传输完成，将请求标记为可调度状态，准备在下次调度循环中继续处理该请求</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.763202Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> scheduler._update_from_kv_xfer_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Finished</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> recving</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> KV</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d2c9fea0c4944c6ba66ac7f9356a139</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 295 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 此时 KV cache 已经传输完成，update_state_after_alloc() 方法会直接返回，不会执行任何特殊的逻辑</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:29.763555Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update_state_after_alloc:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> num_external_tokens=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/distributed/kv_transfer/kv_connector/v1/nixl_connector.py: 383 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># decode worker 完成 token 生成任务，整个 PD 分离流程结束，KV block 可以正常释放</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:36.773065Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> nixl_connector.request_finished:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NIXLConnector</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_finished,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> request_status=FINISHED_STOPPED,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kv_transfer_params={&#39;do_remote_prefill&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;do_remote_decode&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> False,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_block_ids&#39;:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_engine_id&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;5f1cba5c-3231-4b30-9ea3-b393f5311e53&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_host&#39;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;127.0.1.1&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;remote_port&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20420</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;tp_size&#39;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vllm: vllm/v1/engine/core.py: 747 行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vLLM engine 回到空闲状态，等待新的请求</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2025-09-07T07:05:36.773456Z</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> core._process_input_queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> EngineCore</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> work.</span></span></code></pre></div><h3 id="_3-3-在-kubernetes-上部署-dynamo" tabindex="-1">3.3 在 Kubernetes 上部署 Dynamo <a class="header-anchor" href="#_3-3-在-kubernetes-上部署-dynamo" aria-label="Permalink to &quot;3.3 在 Kubernetes 上部署 Dynamo&quot;">​</a></h3><p>前面我们介绍了本地使用 Dynamo 的方法，而在生产环境中要发挥其分布式推理能力则需要在 Kubernetes 上部署。Dynamo 提供了 Dynamo Operator，用户可通过 DynamoGraphDeployment CRD 编排 frontend、prefill worker 和 decode worker，以声明式、云原生的方式实现高效的分布式推理。</p><p>接下来将展示如何在 Kubernetes 上部署 Dynamo，并且运行快速开始和 PD 分离示例。</p><p>首先，执行以下命令安装 kubectl 和 helm：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">snap</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --classic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">snap</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --classic</span></span></code></pre></div><p>本文将会使用 <a href="https://github.com/ai-dynamo/dynamo/blob/main/docs/guides/dynamo_deploy/minikube.md" target="_blank" rel="noreferrer">Minikube</a> 来安装一个单节点的 Kubernetes 集群。执行以下命令安装 Minikube：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -LO</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minikube-linux-amd64</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/minikube</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> minikube-linux-amd64</span></span></code></pre></div><p>启动支持 GPU 的 Minikube 集群，并且安装 Dynamo 所需的 addon。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --driver</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --container-runtime</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --gpus</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> all</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --memory=16000mb</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --cpus=8</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Enable required addons</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> addons</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> istio-provisioner</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> addons</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> istio</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> addons</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> storage-provisioner-rancher</span></span></code></pre></div><p>确认所有 Pod 都已经成功运行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> kubectl get pod -A</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAMESPACE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                                      READY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    RESTARTS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">istio-operator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">       istio-operator-b88fb5f65-pldzx</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             47</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">istio-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         istio-ingressgateway-64887df48f-sfqvr</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             26</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">istio-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">         istiod-65c5bcc875-v27jd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             32</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          coredns-674b8bbfcf-lqz8h</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                  1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          etcd-minikube</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                             1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          kube-apiserver-minikube</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          kube-controller-manager-minikube</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          kube-proxy-pnlmw</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                          1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          kube-scheduler-minikube</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          nvidia-device-plugin-daemonset-wxtg8</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          storage-provisioner</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                       1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             13</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">local-path-storage</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   local-path-provisioner-76f89f99b5-748sw</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             37</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span></code></pre></div><p>安装 Dynamo Kubernetes Platform：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 1. Set environment</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> NAMESPACE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">dynamo-kubernetes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RELEASE_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.4</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.1</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # any version of Dynamo 0.3.2+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 2. Install CRDs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://helm.ngc.nvidia.com/nvidia/ai-dynamo/charts/dynamo-crds-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${RELEASE_VERSION}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.tgz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo-crds</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo-crds-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${RELEASE_VERSION}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.tgz</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 3. Install Platform</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> \${NAMESPACE}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://helm.ngc.nvidia.com/nvidia/ai-dynamo/charts/dynamo-platform-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${RELEASE_VERSION}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.tgz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo-platform</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo-platform-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${RELEASE_VERSION}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.tgz</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> \${NAMESPACE} </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">--set</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo-operator.namespaceRestriction.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span></span></code></pre></div><p>确认 Dynamo 的 CRD 已成功安装，并且 Dynamo 相关组件已正常运行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> kubectl get crd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dynamo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dynamocomponentdeployments.nvidia.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">      2025</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">-08-31T08:50:40Z</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dynamographdeployments.nvidia.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          2025</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">-08-31T08:50:40Z</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> kubectl get pods -n \${NAMESPACE}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                                                              READY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    RESTARTS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dynamo-platform-dynamo-operator-controller-manager-6c7fc65kcqpx</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          34</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dynamo-platform-etcd-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                            1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          34</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dynamo-platform-nats-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                                            2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          34</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dynamo-platform-nats-box-5dbf45c748-zk7xd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                         1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          34</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">s</span></span></code></pre></div><p>接下来通过 <code>DynamoGraphDeployment</code> 定义一个最简单的聚合模式的 vLLM 推理服务，其中包含一个 Frontend 和一个 VllmDecodeWorker。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvidia.com/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">DynamoGraphDeployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-agg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    Frontend</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      dynamoNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-agg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      componentType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">frontend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      extraPodSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        mainContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvcr.io/nvidia/ai-dynamo/vllm-runtime:0.4.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    VllmDecodeWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      dynamoNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-agg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      componentType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">worker</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        limits</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          gpu</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      extraPodSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        mainContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvcr.io/nvidia/ai-dynamo/vllm-runtime:0.4.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          workingDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/workspace/components/backends/vllm</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">-c</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">python3 -m dynamo.vllm --model Qwen/Qwen3-0.6B</span></span></code></pre></div><p>部署完成后，确认 vllm-agg 的 Pod 和 Service 已经成功创建。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@a4u8g-0061:/localhome/local-sevenc#</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pod,svc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                                             READY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    RESTARTS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pod/vllm-agg-frontend-bbf7987c7-6tkqm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m43s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pod/vllm-agg-vllmdecodeworker-5b6c7c5877-5l6g8</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">          2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m42s</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                        TYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        CLUSTER-IP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     EXTERNAL-IP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)    </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">service/vllm-agg-frontend</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   10.98</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.218.92</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        8000</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m43s</span></span></code></pre></div><p>使用端口转发将本地 8000 端口映射到 Frontend Service，以便进行测试。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> svc/vllm-agg-frontend</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:8000</span></span></code></pre></div><p>向 Frontend Service 发送 HTTP 请求以执行推理。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://localhost:8000/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;model&quot;: &quot;Qwen/Qwen3-0.6B&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story about a cowardly cat&quot; }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;stream&quot;: false,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_tokens&quot;: 50</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  }&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 响应</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;id&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;chatcmpl-62d76a88-6a0c-41d1-af22-2f3582e29523&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;choices&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[{&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">index</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;:0,&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;:{&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">content</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;:&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&lt;think&gt;\\nOkay,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wants</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> story</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> about</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cowardly</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Let</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> me</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> thinking</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> about</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> how</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> approach</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> this.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> First,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> I</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> need</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> relatable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> character.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Maybe</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> named</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> something</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Whiskers.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Whisk&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;reasoning_content&quot;:null},&quot;finish_reason&quot;:&quot;stop&quot;}],&quot;created&quot;:1756640102,&quot;model&quot;:&quot;Qwen/Qwen3-0.6B&quot;,&quot;object&quot;:&quot;chat.completion&quot;,&quot;usage&quot;:{&quot;prompt_tokens&quot;:17,&quot;completion_tokens&quot;:49,&quot;total_tokens&quot;:66}}</span></span></code></pre></div><p>通过 <code>DynamoGraphDeployment</code> 部署一个基于 PD 分离架构的 vLLM 推理服务也很简单，只需在配置文件中声明 Frontend、VllmDecodeWorker 和 VllmPrefillWorker 三个组件即可。<code>dynamoNamespace</code> 是 Dynamo 分布式运行时的逻辑隔离单元，而非 Kubernetes 的 namespace；同一 <code>dynamoNamespace</code> 内的组件可以相互发现并进行通信。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvidia.com/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">DynamoGraphDeployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-disagg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    Frontend</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      dynamoNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-disagg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      componentType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">frontend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      extraPodSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        mainContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvcr.io/nvidia/ai-dynamo/vllm-runtime:0.4.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    VllmDecodeWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      dynamoNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-disagg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      componentType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">worker</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        limits</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          gpu</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      extraPodSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        mainContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvcr.io/nvidia/ai-dynamo/vllm-runtime:0.4.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          workingDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/workspace/components/backends/vllm</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">-c</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;python3 -m dynamo.vllm --model Qwen/Qwen3-0.6B&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    VllmPrefillWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      dynamoNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">vllm-disagg</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      componentType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">worker</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        limits</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          gpu</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      extraPodSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        mainContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nvcr.io/nvidia/ai-dynamo/vllm-runtime:0.4.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          workingDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/workspace/components/backends/vllm</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">-c</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;python3 -m dynamo.vllm --model Qwen/Qwen3-0.6B --is-prefill-worker&quot;</span></span></code></pre></div><p>部署完成后，可以看到分别创建了 Frontend、VllmDecodeWorker 和 VllmPrefillWorker 的 Pod。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">root@a4u8g-0061:/localhome/local-sevenc#</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pod,svc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                                                 READY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    RESTARTS</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pod/vllm-disagg-frontend-76c47ddfbf-v592k</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pod/vllm-disagg-vllmdecodeworker-7db6c8c857-qdmw9</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pod/vllm-disagg-vllmprefillworker-79cf89956c-6scz2</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Running</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">             17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                           TYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        CLUSTER-IP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      EXTERNAL-IP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)    </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">service/vllm-disagg-frontend</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ClusterIP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   10.102</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.108.42</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">   &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">non</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        8000</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/TCP</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   17</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">m</span></span></code></pre></div><p>同理，使用端口转发访问 PD 分离架构的 Frontend Service。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> svc/vllm-disagg-frontend</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 8000</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:8000</span></span></code></pre></div><p>客户端发送推理请求进行访问。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://localhost:8000/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;model&quot;: &quot;Qwen/Qwen3-0.6B&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story about a cowardly cat&quot; }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;stream&quot;: false,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;max_tokens&quot;: 50</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  }&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># PD 分离架构响应</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;id&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;chatcmpl-d79fbfe0-e8d1-4752-a47c-92c76ba8ef94&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;choices&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[{&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">index</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;:0,&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;:{&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">content</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;:&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&lt;think&gt;\\nOkay,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wants</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> story</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> about</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cowardly</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Let</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> me</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> brainstorming</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> some</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ideas.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> A</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> that&#39;s not brave in a traditional sense. Maybe a cat who hides or avoids danger. I need to make sure&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;reasoning_content&quot;:null},&quot;finish_reason&quot;:&quot;stop&quot;}],&quot;created&quot;:1756641275,&quot;model&quot;:&quot;Qwen/Qwen3-0.6B&quot;,&quot;object&quot;:&quot;chat.completion&quot;,&quot;usage&quot;:{&quot;prompt_tokens&quot;:17,&quot;completion_tokens&quot;:49,&quot;total_tokens&quot;:66}}</span></span></code></pre></div><h2 id="_4-总结" tabindex="-1">4 总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4 总结&quot;">​</a></h2><p>本文详细介绍了 NVIDIA Dynamo 分布式推理框架的核心概念与实践。文章不仅演示了 Dynamo 在最简单部署模式下的运行方式，还重点讲解了 PD 分离模式，通过将 prefill 与 decode 阶段拆分到不同 GPU 节点，并结合高效数据传输机制，实现了推理吞吐量与效率的显著提升。同时，文章还展示了在 Kubernetes 环境下的部署方法，通过云原生能力轻松实现生产级的分布式推理。</p><h2 id="_5-参考资料" tabindex="-1">5 参考资料 <a class="header-anchor" href="#_5-参考资料" aria-label="Permalink to &quot;5 参考资料&quot;">​</a></h2><ul><li>Dynamo Examples：<a href="https://github.com/ai-dynamo/dynamo/tree/main/examples" target="_blank" rel="noreferrer">https://github.com/ai-dynamo/dynamo/tree/main/examples</a></li><li>vLLM Kubernetes Deployment Configurations：<a href="https://github.com/ai-dynamo/dynamo/blob/main/components/backends/vllm/deploy/README.md" target="_blank" rel="noreferrer">https://github.com/ai-dynamo/dynamo/blob/main/components/backends/vllm/deploy/README.md</a></li><li>Installing the NVIDIA Container Toolkit：<a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html" target="_blank" rel="noreferrer">https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html</a></li><li>TKE 上使用 NVIDIA Dynamo 部署 PD 分离的大模型：<a href="https://cloud.tencent.com/developer/article/2515122" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/2515122</a></li><li>NVIDIA Dynamo, A Low-Latency Distributed Inference Framework for Scaling Reasoning AI Models：<a href="https://developer.nvidia.com/blog/introducing-nvidia-dynamo-a-low-latency-distributed-inference-framework-for-scaling-reasoning-ai-models/" target="_blank" rel="noreferrer">https://developer.nvidia.com/blog/introducing-nvidia-dynamo-a-low-latency-distributed-inference-framework-for-scaling-reasoning-ai-models/</a></li><li>NVDIA Dynamo推理框架技术解析：<a href="https://zhuanlan.zhihu.com/p/1886300967491830777" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/1886300967491830777</a></li><li>代码演示 ｜ 使用 NVIDIA Dynamo 进行 P/D 分离服务：<a href="https://www.bilibili.com/video/BV1ow8wz9Ece" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1ow8wz9Ece</a></li></ul>`,101))])}const q=e(C,[["render",u]]);export{f as __pageData,q as default};

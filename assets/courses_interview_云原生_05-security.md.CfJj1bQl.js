import{_ as i,c as a,o as e,P as t}from"./chunks/framework.kLAB-UjF.js";const c=JSON.parse('{"title":"安全","description":"","frontmatter":{"title":"安全","author":"Se7en","categories":["Interview"],"tags":["Security"]},"headers":[],"relativePath":"courses/interview/云原生/05-security.md","filePath":"courses/interview/云原生/05-security.md","lastUpdated":1729346568000}'),n={name:"courses/interview/云原生/05-security.md"};function l(r,s,h,p,k,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h2 id="在-kubernetes-中容器内的-root-用户是宿主机的-root-用户吗" tabindex="-1">在 Kubernetes 中容器内的 root 用户是宿主机的 root 用户吗？ <a class="header-anchor" href="#在-kubernetes-中容器内的-root-用户是宿主机的-root-用户吗" aria-label="Permalink to &quot;在 Kubernetes 中容器内的 root 用户是宿主机的 root 用户吗？&quot;">​</a></h2><p>默认情况下是的。在不使用 user namespace 的情况下，对于以 root 用户运行的容器而言，发生容器逃逸（如 <a href="https://www.youtube.com/watch?v=07y5bl5UDdA&amp;ab_channel=Kinvolk" target="_blank" rel="noreferrer">CVE-2024-21626</a>）时，容器将拥有在宿主机上的 root 特权。可以通过设置 <code>hostUsers: false</code> 来为 Pod 启用 user namespace。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Pod</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">userns</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  hostUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  containers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">shell</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sleep&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;infinity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">debian</span></span></code></pre></div><p>参考资料：</p><ul><li><a href="https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/user-namespaces/" target="_blank" rel="noreferrer">为 Pod 配置 user 名字空间</a></li><li><a href="https://kubernetes.io/zh-cn/blog/2024/04/22/userns-beta/" target="_blank" rel="noreferrer">Kubernetes 1.30：对 Pod 使用用户命名空间的支持进阶至 Beta</a></li><li><a href="https://time.geekbang.org/column/article/326253" target="_blank" rel="noreferrer">极客时间；19 | 容器安全（1）：我的容器真的需要privileged权限吗?</a></li></ul>`,5)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};

import{_ as h}from"./chunks/ArticleMetadata.BFUCIUL_.js";import{_ as k,C as r,c as o,o as t,k as e,G as g,P as d,a as c,w as A,b as y,e as F}from"./chunks/framework.BhFhJsV2.js";import"./chunks/md5.DoUKmYou.js";const q=JSON.parse('{"title":"AI","description":"","frontmatter":{"title":"AI","author":"Se7en","categories":["AI"],"tags":["AI","Open Source"]},"headers":[],"relativePath":"categories/open-source/开源项目/01-ai.md","filePath":"categories/open-source/开源项目/01-ai.md","lastUpdated":1740297644000}'),C={name:"categories/open-source/开源项目/01-ai.md"};function D(i,s,u,m,B,E){const l=h,p=r("ClientOnly");return t(),o("div",null,[s[0]||(s[0]=e("h1",{id:"ai",tabindex:"-1"},[c("AI "),e("a",{class:"header-anchor",href:"#ai","aria-label":'Permalink to "AI"'},"​")],-1)),g(p,null,{default:A(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(t(),y(l,{key:0,article:i.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),s[1]||(s[1]=d(`<h2 id="ai-agent" tabindex="-1">AI Agent <a class="header-anchor" href="#ai-agent" aria-label="Permalink to &quot;AI Agent&quot;">​</a></h2><h3 id="smolagents" tabindex="-1">smolagents <a class="header-anchor" href="#smolagents" aria-label="Permalink to &quot;smolagents&quot;">​</a></h3><p><a href="https://github.com/huggingface/smolagents" target="_blank" rel="noreferrer">smolagents</a> 是一个库，让你只需几行代码就能运行强大的智能代理。它提供了以下特点：</p><p>✨ <strong>简单性</strong>：代理的逻辑仅需约 1000 行代码（见 <a href="https://github.com/huggingface/smolagents/blob/main/src/smolagents/agents.py" target="_blank" rel="noreferrer">agents.py</a>）。我们将抽象层保持在最低限度，直接基于原始代码！</p><p>🧑‍💻 <strong>对代码代理的一流支持</strong>：我们的 <a href="https://huggingface.co/docs/smolagents/reference/agents#smolagents.CodeAgent" target="_blank" rel="noreferrer"><code>CodeAgent</code></a> 通过编写代码来执行动作（而不是“代理被用来编写代码”）。为了确保安全性，我们支持通过 <a href="https://e2b.dev/" target="_blank" rel="noreferrer">E2B</a> 在沙箱环境中执行代码。</p><p>🤗 <strong>Hub 集成</strong>：你可以<a href="https://huggingface.co/docs/smolagents/reference/tools#smolagents.Tool.from_hub" target="_blank" rel="noreferrer">从 Hub 分享或拉取工具</a>，未来还会有更多功能！</p><p>🌐 <strong>模型无关性</strong>：smolagents 支持任何大语言模型（LLM）。可以是本地的 <code>transformers</code> 或 <code>ollama</code> 模型，也可以通过 <a href="https://huggingface.co/blog/inference-providers" target="_blank" rel="noreferrer">Hub 上的多种提供商</a>，或者通过我们的 <a href="https://www.litellm.ai/" target="_blank" rel="noreferrer">LiteLLM</a> 集成支持 OpenAI、Anthropic 等多种模型。</p><p>👁️ <strong>多模态支持</strong>：代理支持文本、视觉、视频甚至音频输入！请参阅<a href="https://huggingface.co/docs/smolagents/examples/web_browser" target="_blank" rel="noreferrer">此教程</a> 了解视觉相关内容。</p><p>🛠️ <strong>工具无关性</strong>：你可以使用 <a href="https://huggingface.co/docs/smolagents/reference/tools#smolagents.Tool.from_langchain" target="_blank" rel="noreferrer">LangChain</a>、<a href="https://huggingface.co/docs/smolagents/reference/tools#smolagents.ToolCollection.from_mcp" target="_blank" rel="noreferrer">Anthropic 的 MCP</a> 的工具，甚至可以将 <a href="https://huggingface.co/docs/smolagents/reference/tools#smolagents.Tool.from_space" target="_blank" rel="noreferrer">Hub Space</a> 用作工具。</p><p>以下是一个简单的使用示例：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> smolagents </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CodeAgent, HfApiModel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;meta-llama/Llama-3.3-70B-Instruct&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HfApiModel(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">model_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model_id, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&lt;YOUR_HUGGINGFACEHUB_API_TOKEN&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># You can choose to not pass any model_id to HfApiModel to use a default free model</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># you can also specify a particular provider e.g. provider=&quot;together&quot; or provider=&quot;sambanova&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CodeAgent(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">tools</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[], </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">add_base_tools</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">agent.run(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;Could you give me the 118th number in the Fibonacci sequence?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h3 id="autogen" tabindex="-1">autogen <a class="header-anchor" href="#autogen" aria-label="Permalink to &quot;autogen&quot;">​</a></h3><p>AutoGen 是一个开源编程框架，用于构建 AI 代理并促进多个代理之间的合作以解决问题。AutoGen 旨在提供一个易于使用和灵活的框架，以加速代理型 AI 的开发和研究。它提供了诸如代理之间可以对话、LLM 和工具使用支持、自主和人机协作工作流以及多代理对话模式等功能。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202502231559347.png" alt=""></p><p>入门的例子是创建一个 AI 团队，一个当任务执行者，一个当评判者，当评判者觉得可以了，就停止对话，完成任务。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> asyncio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_agentchat.agents </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AssistantAgent</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_agentchat.base </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TaskResult</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_agentchat.conditions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ExternalTermination, TextMentionTermination</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_agentchat.teams </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RoundRobinGroupChat</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_agentchat.ui </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Console</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_core </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CancellationToken</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autogen_ext.models.openai </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OpenAIChatCompletionClient</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # Create an OpenAI model client.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    model_client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OpenAIChatCompletionClient(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;gpt-4o-2024-08-06&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        api_key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Optional if you have an OPENAI_API_KEY env variable set.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # Create the primary agent.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    primary_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AssistantAgent(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        model_client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model_client,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        system_message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;You are a helpful AI assistant.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # Create the critic agent.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    critic_agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AssistantAgent(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;critic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        model_client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model_client,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        system_message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Provide constructive feedback. Respond with &#39;APPROVE&#39; to when your feedbacks are addressed.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # Define a termination condition that stops the task if the critic approves.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    text_termination </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TextMentionTermination(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;APPROVE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    team </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RoundRobinGroupChat(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        [primary_agent, critic_agent],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">        termination_condition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">text_termination,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Use the bitwise OR operator to combine conditions.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Console(team.run_stream(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">task</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;写一首关于秋天的短诗&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    asyncio.run(main())</span></span></code></pre></div><p>输出结果如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">写一首关于秋天的短诗</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> primary </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">秋风轻摇叶漫天，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">金黄稻穗笑丰年。  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">枫红染尽山川路，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">硕果满枝惹人怜。  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">晨霜点缀草间珠，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">夕阳映影湖中船。  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">静谧凉月盈满空，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">秋夜温柔如梦甜。  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Prompt tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Completion tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">81</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> critic </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">这首关于秋天的短诗运用了丰富的意象生动地描绘了秋天的美丽。以下是一些建议来进一步提升这首诗：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">. 开头的两行已经相当完整，但可以考虑将“轻摇”替换为更具体的动词，比如“飘落”，以增强画面感。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">. 第二节中的“晨霜点缀草间珠”可以更加具体化，比如但不局限于使用“白霜”，进一步富有诗意地描述秋季清晨的细节。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">. 尾句“秋夜温柔如梦甜”可以再结合一个感官描写，比如“如梦”可以结合沁人心脾的“桂香扑鼻”之类的细节来丰富整体体验。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">这些建议旨在增加诗歌的生动性和情感深度，整体上已经非常优秀。请进行相应的改动后，我将很高兴地给予批准。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Prompt tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">126</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Completion tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">215</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> primary </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">非常感谢您的建议！根据您的意见，我对诗歌做了一些修改：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">秋风飘落叶漫天，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">金黄稻穗笑丰年。  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">枫红染尽山川路，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">硕果满枝惹人怜。  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">白霜点缀草间珠，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">夕阳映影湖中船。  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">桂香扑鼻月满空，  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">秋夜温柔如梦甜。  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">希望这些改动能够增强诗歌的生动性，带来更加丰富的秋季体验。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Prompt tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">334</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Completion tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> critic </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">改动后的诗歌确实更加生动且富有画面感。使用“飘落”更好地描绘了秋天的特征，而“白霜”和“桂香扑鼻”的加入使得诗歌在感官描述上更加具体和丰富。这 些改动有效地增强了诗歌的生动性和情感深度。因此，我准许该稿件。 </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">APPROVE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Prompt tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">471</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Completion tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">92</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Summary </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">----------</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Number of messages: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Finish reason: Text </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;APPROVE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mentioned</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Total prompt tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">959</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Total completion tokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">508</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">14.87</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> seconds</span></span></code></pre></div><p>参考资料：</p><ul><li><a href="https://www.cnblogs.com/mingupupu/p/18658018" target="_blank" rel="noreferrer">AutoGen入门-让两个AI自行聊天完成任务</a></li></ul><h2 id="ai-可观测" tabindex="-1">AI 可观测 <a class="header-anchor" href="#ai-可观测" aria-label="Permalink to &quot;AI 可观测&quot;">​</a></h2><h3 id="arize-phoenix" tabindex="-1">Arize Phoenix <a class="header-anchor" href="#arize-phoenix" aria-label="Permalink to &quot;Arize Phoenix&quot;">​</a></h3><p><a href="https://github.com/Arize-ai/phoenix" target="_blank" rel="noreferrer">Phoenix</a> 是一个开源的 AI 可观测平台，专为实验、评估和故障排除而设计。它提供：</p><ul><li><a href="https://docs.arize.com/phoenix/tracing/llm-traces" target="_blank" rel="noreferrer"><strong>追踪（Tracing）</strong></a> - 使用基于 OpenTelemetry 的工具对 LLM 应用程序的运行时进行追踪。</li><li><a href="https://docs.arize.com/phoenix/evaluation/llm-evals" target="_blank" rel="noreferrer"><strong>评估（Evaluation）</strong></a> - 利用 LLM 进行基准测试，通过响应和检索评估衡量应用程序的性能。</li><li><a href="https://docs.arize.com/phoenix/datasets-and-experiments/overview-datasets" target="_blank" rel="noreferrer"><strong>数据集（Datasets）</strong></a> - 创建版本化的数据集，以支持实验、评估和微调。</li><li><a href="https://docs.arize.com/phoenix/datasets-and-experiments/overview-datasets#experiments" target="_blank" rel="noreferrer"><strong>实验（Experiments）</strong></a> - 跟踪并评估提示词、LLM 和检索方式的变更影响。</li><li><a href="https://docs.arize.com/phoenix/prompt-engineering/overview-prompts" target="_blank" rel="noreferrer"><strong>游乐场（Playground）</strong></a> - 优化提示词、对比模型、调整参数，并重放追踪到的 LLM 调用。</li></ul><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202502162001391.gif" alt=""></p><h2 id="ai-代理" tabindex="-1">AI 代理 <a class="header-anchor" href="#ai-代理" aria-label="Permalink to &quot;AI 代理&quot;">​</a></h2><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202501032030701.png" alt=""></p><p>参考资料：</p><ul><li><a href="https://www.xiaogenban1993.com/blog/24.09/llm%E4%BE%9B%E5%BA%94%E5%95%86" target="_blank" rel="noreferrer">LLM供应商</a></li></ul><h3 id="openrouter" tabindex="-1">OpenRouter <a class="header-anchor" href="#openrouter" aria-label="Permalink to &quot;OpenRouter&quot;">​</a></h3><p><a href="https://openrouter.ai/" target="_blank" rel="noreferrer">OpenRouter</a> 是一个统一的 API 服务平台，旨在通过单一接口为用户提供对多种大型语言模型（LLM）的访问。</p><p>该平台支持多种知名模型，包括 OpenAI 的 GPT-3.5 和 GPT-4、Anthropic 的 Claude 系列、Meta 的 LLaMA 系列、Google 的 Gemini 系列等。</p><p>闭源模型如 GPT 是和 <a href="https://openai.com/api/pricing/" target="_blank" rel="noreferrer">OpenAI 的官网价格</a>一致甚至更低，并且已经提供了最新的 o1 模型了。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202501032022759.png" alt=""></p><p>开源 llama3.1-70b 8K 上下文甚至免费，131K 上下文收费也仅有 0.12 美元/百万 token。</p><p><img src="https://chengzw258.oss-cn-beijing.aliyuncs.com/Article/202501032022920.png" alt=""></p><p><strong>使用方法</strong></p><p>请求的时候统一指定 OpenRouter 的地址：<a href="https://openrouter.ai" target="_blank" rel="noreferrer">https://openrouter.ai</a>，在 model 中指定模型名称，例如 <code>openai/gpt-3.5-turbo</code>、<code>anthropic/claude-3.5-haiku-20241022</code>，请求头和请求体统一使用 OpenAI 的格式。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://openrouter.ai/api/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;Authorization: Bearer \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OPENROUTER_API_KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;model&quot;: &quot;openai/gpt-3.5-turbo&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;role&quot;: &quot;user&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;content&quot;: &quot;What is the meaning of life?&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://openrouter.ai/api/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;Authorization: Bearer \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OPENROUTER_API_KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;model&quot;: &quot;anthropic/claude-3.5-haiku-20241022&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;role&quot;: &quot;user&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &quot;content&quot;: &quot;What is the meaning of life?&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&#39;</span></span></code></pre></div><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="screenpipe" tabindex="-1">Screenpipe <a class="header-anchor" href="#screenpipe" aria-label="Permalink to &quot;Screenpipe&quot;">​</a></h3><p>Screenpipe 是一款开源的 AI 工具，能够 24 小时不间断地记录您的屏幕和音频数据，并将其存储在本地数据库中。Screenpipe 通过结合大型语言模型（LLMs），可实现对您在电脑上所做事情的进行对话、总结和回顾。</p><p>参考资料：</p><ul><li><a href="https://docs.screenpi.pe/docs/examples" target="_blank" rel="noreferrer">Screenpipe use case examples</a></li><li><a href="https://docs.screenpi.pe/docs/plugins#available-pipes" target="_blank" rel="noreferrer">Screenpipe available pipes</a></li></ul>`,44))])}const v=k(C,[["render",D]]);export{q as __pageData,v as default};
